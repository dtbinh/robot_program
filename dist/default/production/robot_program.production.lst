

Microchip Technology PIC PRO Macro Assembler V1.33 build 59893 
                                                                                               Wed Jun 10 20:23:31 2015

Microchip Technology Omniscient Code Generator (PRO mode) build 59893
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	pa_nodes,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     	;# 
    19  0001                     	;# 
    20  0002                     	;# 
    21  0003                     	;# 
    22  0004                     	;# 
    23  0005                     	;# 
    24  0006                     	;# 
    25  0007                     	;# 
    26  000A                     	;# 
    27  000B                     	;# 
    28  000C                     	;# 
    29  000D                     	;# 
    30  000E                     	;# 
    31  000E                     	;# 
    32  000F                     	;# 
    33  0010                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0013                     	;# 
    37  0014                     	;# 
    38  0015                     	;# 
    39  0015                     	;# 
    40  0016                     	;# 
    41  0017                     	;# 
    42  0018                     	;# 
    43  0019                     	;# 
    44  001A                     	;# 
    45  001C                     	;# 
    46  001D                     	;# 
    47  001E                     	;# 
    48  001F                     	;# 
    49  0081                     	;# 
    50  0085                     	;# 
    51  0086                     	;# 
    52  0087                     	;# 
    53  008C                     	;# 
    54  008D                     	;# 
    55  008E                     	;# 
    56  008F                     	;# 
    57  0090                     	;# 
    58  0092                     	;# 
    59  0093                     	;# 
    60  0093                     	;# 
    61  0093                     	;# 
    62  0094                     	;# 
    63  0095                     	;# 
    64  0095                     	;# 
    65  0096                     	;# 
    66  0096                     	;# 
    67  0097                     	;# 
    68  0098                     	;# 
    69  0099                     	;# 
    70  009A                     	;# 
    71  009B                     	;# 
    72  009E                     	;# 
    73  009F                     	;# 
    74  010C                     	;# 
    75  010C                     	;# 
    76  010D                     	;# 
    77  010E                     	;# 
    78  010F                     	;# 
    79  0115                     	;# 
    80  0116                     	;# 
    81  0118                     	;# 
    82  0119                     	;# 
    83  011A                     	;# 
    84  011B                     	;# 
    85  011E                     	;# 
    86  011F                     	;# 
    87  018C                     	;# 
    88  018D                     	;# 
    89  019D                     	;# 
    90  019E                     	;# 
    91                           
    92                           	psect	idataBANK0
    93  0000                     __pidataBANK0:	
    94                           
    95                           	psect	strings
    96  012C                     __pstrings:	
    97  012C                     stringtab:	
    98  012C                     __stringtab:	
    99  012C                     stringcode:	
   100                           ;	String table - string pointers are 1 byte each
   101                           
   102  012C                     stringdir:	
   103  012C  3001               	movlw	high stringdir
   104  012D  008A               	movwf	10
   105  012E  0804               	movf	4,w
   106  012F  0A84               	incf	4,f
   107  0130  0782               	addwf	2,f
   108  0131                     __stringbase:	
   109  0131  3400               	retlw	0
   110  0132                     __end_of__stringtab:	
   111  0132                     _motor1Array:	
   112  0132  340F               	retlw	15
   113  0133  3487               	retlw	135
   114  0134  3405               	retlw	5
   115  0135  3443               	retlw	67
   116  0136  3469               	retlw	105
   117  0137  3482               	retlw	130
   118  0138  3494               	retlw	148
   119  0139  34A1               	retlw	161
   120  013A  34AC               	retlw	172
   121  013B  34B4               	retlw	180
   122  013C  34BB               	retlw	187
   123  013D  34C0               	retlw	192
   124  013E  34C5               	retlw	197
   125  013F  34C9               	retlw	201
   126  0140  34CD               	retlw	205
   127  0141                     __end_of_motor1Array:	
   128  0141                     _motor2_1Array:	
   129  0141  34A2               	retlw	162
   130  0142  34D1               	retlw	209
   131  0143  34E0               	retlw	224
   132  0144  34E8               	retlw	232
   133  0145  34ED               	retlw	237
   134  0146  34F0               	retlw	240
   135  0147  34F2               	retlw	242
   136  0148  34F4               	retlw	244
   137  0149  34F5               	retlw	245
   138  014A  34F6               	retlw	246
   139  014B  34F7               	retlw	247
   140  014C  34F8               	retlw	248
   141  014D  34F8               	retlw	248
   142  014E  34F9               	retlw	249
   143  014F  34F9               	retlw	249
   144  0150                     __end_of_motor2_1Array:	
   145  0150                     _motor2_2Array:	
   146  0150  343F               	retlw	63
   147  0151  341F               	retlw	31
   148  0152  34BF               	retlw	191
   149  0153  348F               	retlw	143
   150  0154  343F               	retlw	63
   151  0155  345F               	retlw	95
   152  0156  349A               	retlw	154
   153  0157  3447               	retlw	71
   154  0158  3494               	retlw	148
   155  0159  349F               	retlw	159
   156  015A  3479               	retlw	121
   157  015B  342F               	retlw	47
   158  015C  34C9               	retlw	201
   159  015D  344D               	retlw	77
   160  015E  34BF               	retlw	191
   161  015F                     __end_of_motor2_2Array:	
   162  015F                     _posArray1:	
   163  015F  3411               	retlw	17
   164  0160  3401               	retlw	1
   165  0161  3403               	retlw	3
   166  0162  3402               	retlw	2
   167  0163  3406               	retlw	6
   168  0164  3404               	retlw	4
   169  0165  3414               	retlw	20
   170  0166  3410               	retlw	16
   171  0167                     __end_of_posArray1:	
   172  0167                     _posArray2:	
   173  0167  3409               	retlw	9
   174  0168  3401               	retlw	1
   175  0169  3403               	retlw	3
   176  016A  3402               	retlw	2
   177  016B  3406               	retlw	6
   178  016C  3404               	retlw	4
   179  016D  340C               	retlw	12
   180  016E  3408               	retlw	8
   181  016F                     __end_of_posArray2:	
   182                           
   183                           	psect	nvBANK0
   184  0036                     __pnvBANK0:	
   185  0036                     _tmp1:	
   186  0036                     	ds	1
   187  0005                     _PORTA	set	5
   188  0006                     _PORTB	set	6
   189  0007                     _PORTC	set	7
   190  001A                     _RCREG	set	26
   191  0010                     _T1CONbits	set	16
   192  0001                     _TMR0	set	1
   193  000F                     _TMR1H	set	15
   194  000E                     _TMR1L	set	14
   195  00C4                     _CREN	set	196
   196  00C2                     _FERR	set	194
   197  005F                     _GIE	set	95
   198  00C1                     _OERR	set	193
   199  005E                     _PEIE	set	94
   200  0065                     _RCIF	set	101
   201  00C7                     _SPEN	set	199
   202  005D                     _T0IE	set	93
   203  005A                     _T0IF	set	90
   204  0083                     _T1OSCEN	set	131
   205  0081                     _TMR1CS	set	129
   206  0086                     _TMR1GE	set	134
   207  0060                     _TMR1IF	set	96
   208  0080                     _TMR1ON	set	128
   209  0081                     _OPTION_REG	set	129
   210  008F                     _OSCCON	set	143
   211  0090                     _OSCTUNE	set	144
   212  0099                     _SPBRG	set	153
   213  009A                     _SPBRGH	set	154
   214  0085                     _TRISA	set	133
   215  0086                     _TRISB	set	134
   216  0087                     _TRISC	set	135
   217  04DB                     _BRG16	set	1243
   218  04C2                     _BRGH	set	1218
   219  0465                     _RCIE	set	1125
   220  04C4                     _SYNC	set	1220
   221  0460                     _TMR1IE	set	1120
   222  011E                     _ANSEL	set	286
   223  011F                     _ANSELH	set	287
   224                           
   225                           ; #config settings
   226  0000                     
   227                           	psect	cinit
   228  0013                     start_initialization:	
   229  0013                     __initialization:	
   230  0013  304B               	movlw	75
   231                           
   232                           ; Clear objects allocated to COMMON
   233  0014  01F0               	clrf	__pbssCOMMON& (0+127)
   234  0015  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   235  0016  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   236  0017  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   237  0018  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   238  0019  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   239  001A  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   240  001B  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   241  001C  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
   242  001D  01F9               	clrf	(__pbssCOMMON+9)& (0+127)
   243                           
   244                           ; Clear objects allocated to BANK0
   245  001E  01AF               	clrf	__pbssBANK0& (0+127)
   246  001F  01B0               	clrf	(__pbssBANK0+1)& (0+127)
   247  0020  01B1               	clrf	(__pbssBANK0+2)& (0+127)
   248  0021  01B2               	clrf	(__pbssBANK0+3)& (0+127)
   249  0022  01B3               	clrf	(__pbssBANK0+4)& (0+127)
   250  0023  01B4               	clrf	(__pbssBANK0+5)& (0+127)
   251  0024  01B5               	clrf	(__pbssBANK0+6)& (0+127)
   252                           
   253                           ;initializer for _uart_data
   254  0025  00A0               	movwf	__pdataBANK0& (0+127)
   255  0026  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   256  0027  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   257  0028  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   258  0029  00A4               	movwf	(__pdataBANK0+4)& (0+127)
   259  002A  00A5               	movwf	(__pdataBANK0+5)& (0+127)
   260  002B  00A6               	movwf	(__pdataBANK0+6)& (0+127)
   261  002C  00A7               	movwf	(__pdataBANK0+7)& (0+127)
   262  002D  00A8               	movwf	(__pdataBANK0+8)& (0+127)
   263  002E  00A9               	movwf	(__pdataBANK0+9)& (0+127)
   264  002F  00AA               	movwf	(__pdataBANK0+10)& (0+127)
   265  0030  00AB               	movwf	(__pdataBANK0+11)& (0+127)
   266  0031  00AC               	movwf	(__pdataBANK0+12)& (0+127)
   267  0032  00AD               	movwf	(__pdataBANK0+13)& (0+127)
   268  0033  00AE               	movwf	(__pdataBANK0+14)& (0+127)
   269  0034                     end_of_initialization:	
   270                           ;End of C runtime variable initialization code
   271                           
   272  0034                     __end_of__initialization:	
   273  0034  0183               	clrf	3
   274  0035  118A  2837         	ljmp	_main	;jump to C main() function
   275                           
   276                           	psect	bssCOMMON
   277  0070                     __pbssCOMMON:	
   278  0070                     _counter1:	
   279  0070                     	ds	1
   280  0071                     _counter2:	
   281  0071                     	ds	1
   282  0072                     _counter_uart:	
   283  0072                     	ds	1
   284  0073                     _motor1:	
   285  0073                     	ds	1
   286  0074                     _motor1run:	
   287  0074                     	ds	1
   288  0075                     _motor2:	
   289  0075                     	ds	1
   290  0076                     _motor2run:	
   291  0076                     	ds	1
   292  0077                     _tmp2:	
   293  0077                     	ds	1
   294  0078                     _tmp3:	
   295  0078                     	ds	1
   296  0079                     _tmp_data:	
   297  0079                     	ds	1
   298                           
   299                           	psect	bssBANK0
   300  002F                     __pbssBANK0:	
   301  002F                     _direction1:	
   302  002F                     	ds	2
   303  0031                     _direction2:	
   304  0031                     	ds	2
   305  0033                     _loop1:	
   306  0033                     	ds	2
   307  0035                     _incremental1:	
   308  0035                     	ds	1
   309                           
   310                           	psect	dataBANK0
   311  0020                     __pdataBANK0:	
   312  0020                     _uart_data:	
   313  0020                     	ds	15
   314                           
   315                           	psect	cstackCOMMON
   316  007A                     __pcstackCOMMON:	
   317  007A                     ?_handle_counter1:	
   318  007A                     ??_handle_counter1:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  007A                     ?_handle_counter2:	
   322                           ; 0 bytes @ 0x0
   323                           
   324  007A                     ??_handle_counter2:	
   325                           ; 0 bytes @ 0x0
   326                           
   327  007A                     ?_global_interrupt:	
   328                           ; 0 bytes @ 0x0
   329                           
   330  007A                     ??_global_interrupt:	
   331                           ; 0 bytes @ 0x0
   332                           
   333  007A                     ?_main:	
   334                           ; 0 bytes @ 0x0
   335                           
   336                           
   337                           ; 2 bytes @ 0x0
   338  007A                     	ds	4
   339                           
   340                           	psect	cstackBANK0
   341  0000                     __pcstackBANK0:	
   342  0000                     ??_main:	
   343                           
   344                           	psect	maintext
   345  0037                     __pmaintext:	
   346                           ; 0 bytes @ 0x0
   347 ;;
   348 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   349 ;;
   350 ;; *************** function _main *****************
   351 ;; Defined at:
   352 ;;		line 157 in file "main.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;		None
   357 ;; Return value:  Size  Location     Type
   358 ;;                  2  161[COMMON] int 
   359 ;; Registers used:
   360 ;;		wreg, status,2, status,0
   361 ;; Tracked objects:
   362 ;;		On entry : 17F/0
   363 ;;		On exit  : 17F/0
   364 ;;		Unchanged: 11F/0
   365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   366 ;;      Params:         0       0       0       0
   367 ;;      Locals:         0       0       0       0
   368 ;;      Temps:          0       0       0       0
   369 ;;      Totals:         0       0       0       0
   370 ;;Total ram usage:        0 bytes
   371 ;; Hardware stack levels required when called:    3
   372 ;; This function calls:
   373 ;;		Nothing
   374 ;; This function is called by:
   375 ;;		Startup code after reset
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           
   380                           ;psect for function _main
   381  0037                     _main:	
   382                           
   383                           ;main.c: 159: OSCCON = 0x00;
   384                           
   385                           ;incstack = 0
   386                           ; Regs used in _main: [wreg+status,2+status,0]
   387  0037  1683               	bsf	3,5	;RP0=1, select bank1
   388  0038  018F               	clrf	15	;volatile
   389                           
   390                           ;main.c: 160: OSCCON |= 0b01110001;
   391  0039  3071               	movlw	113
   392  003A  048F               	iorwf	15,f	;volatile
   393                           
   394                           ;main.c: 161: OSCTUNE = 0x00;
   395  003B  0190               	clrf	16	;volatile
   396                           
   397                           ;main.c: 165: OPTION_REG &= 0b11010000;
   398  003C  30D0               	movlw	208
   399  003D  0581               	andwf	1,f	;volatile
   400                           
   401                           ;main.c: 166: OPTION_REG |= 0b00000100;
   402  003E  1501               	bsf	1,2	;volatile
   403                           
   404                           ;main.c: 167: TMR0 = 0x00;
   405  003F  1283               	bcf	3,5	;RP0=0, select bank0
   406  0040  0181               	clrf	1	;volatile
   407                           
   408                           ;main.c: 168: T0IE = 1;
   409  0041  168B               	bsf	11,5	;volatile
   410                           
   411                           ;main.c: 173: TMR1GE = 0;
   412  0042  1310               	bcf	16,6	;volatile
   413                           
   414                           ;main.c: 174: T1CONbits.T1CKPS0 = 0;
   415  0043  1210               	bcf	16,4	;volatile
   416                           
   417                           ;main.c: 175: T1CONbits.T1CKPS1 = 0;
   418  0044  1290               	bcf	16,5	;volatile
   419                           
   420                           ;main.c: 176: T1OSCEN = 0;
   421  0045  1190               	bcf	16,3	;volatile
   422                           
   423                           ;main.c: 177: TMR1CS = 0;
   424  0046  1090               	bcf	16,1	;volatile
   425                           
   426                           ;main.c: 178: TMR1ON = 1;
   427  0047  1410               	bsf	16,0	;volatile
   428                           
   429                           ;main.c: 179: TMR1H = 0x00;
   430  0048  018F               	clrf	15	;volatile
   431                           
   432                           ;main.c: 180: TMR1H = 0x00;
   433  0049  018F               	clrf	15	;volatile
   434                           
   435                           ;main.c: 181: TMR1IE = 1;
   436  004A  1683               	bsf	3,5	;RP0=1, select bank1
   437  004B  140C               	bsf	12,0	;volatile
   438                           
   439                           ;main.c: 185: BRG16 = 0;
   440  004C  119B               	bcf	27,3	;volatile
   441                           
   442                           ;main.c: 186: BRGH = 0;
   443  004D  1118               	bcf	24,2	;volatile
   444                           
   445                           ;main.c: 187: SPBRGH = 0;
   446  004E  019A               	clrf	26	;volatile
   447                           
   448                           ;main.c: 188: SPBRG = 0x0C;
   449  004F  300C               	movlw	12
   450  0050  0099               	movwf	25	;volatile
   451                           
   452                           ;main.c: 189: SYNC = 0;
   453  0051  1218               	bcf	24,4	;volatile
   454                           
   455                           ;main.c: 190: SPEN = 1;
   456  0052  1283               	bcf	3,5	;RP0=0, select bank0
   457  0053  1798               	bsf	24,7	;volatile
   458                           
   459                           ;main.c: 191: RCIE = 1;
   460  0054  1683               	bsf	3,5	;RP0=1, select bank1
   461  0055  168C               	bsf	12,5	;volatile
   462                           
   463                           ;main.c: 192: CREN = 1;
   464  0056  1283               	bcf	3,5	;RP0=0, select bank0
   465  0057  1618               	bsf	24,4	;volatile
   466                           
   467                           ;main.c: 211: TRISA = 0x00;
   468  0058  1683               	bsf	3,5	;RP0=1, select bank1
   469  0059  0185               	clrf	5	;volatile
   470                           
   471                           ;main.c: 212: TRISB = 0b00100000;
   472  005A  3020               	movlw	32
   473  005B  0086               	movwf	6	;volatile
   474                           
   475                           ;main.c: 213: TRISC = 0x00;
   476  005C  0187               	clrf	7	;volatile
   477                           
   478                           ;main.c: 214: ANSEL = 0x00;
   479  005D  1283               	bcf	3,5	;RP0=0, select bank2
   480  005E  1703               	bsf	3,6	;RP1=1, select bank2
   481  005F  019E               	clrf	30	;volatile
   482                           
   483                           ;main.c: 215: ANSELH = 0x00;
   484  0060  019F               	clrf	31	;volatile
   485                           
   486                           ;main.c: 218: PORTA = 0x00;
   487  0061  1303               	bcf	3,6	;RP1=0, select bank0
   488  0062  0185               	clrf	5	;volatile
   489                           
   490                           ;main.c: 219: PORTB = 0x00;
   491  0063  0186               	clrf	6	;volatile
   492                           
   493                           ;main.c: 220: PORTC = 0x00;
   494  0064  0187               	clrf	7	;volatile
   495                           
   496                           ;main.c: 221: PEIE = 1;
   497  0065  170B               	bsf	11,6	;volatile
   498                           
   499                           ;main.c: 222: GIE = 1;
   500  0066  178B               	bsf	11,7	;volatile
   501  0067                     l1117:	
   502                           
   503                           ;main.c: 227: tmp1 = uart_data[14];
   504  0067  082E               	movf	_uart_data+14,w
   505  0068  00B6               	movwf	_tmp1
   506                           
   507                           ;main.c: 229: if(tmp1 == 75)
   508  0069  3A4B               	xorlw	75
   509  006A  1D03               	skipz
   510  006B  286E               	goto	l1123
   511                           
   512                           ;main.c: 230: motor1run = 0x00;
   513  006C  01F4               	clrf	_motor1run
   514  006D  2870               	goto	l164
   515  006E                     l1123:	
   516                           
   517                           ;main.c: 231: else
   518                           ;main.c: 232: motor1run = 0xFF;
   519  006E  30FF               	movlw	255
   520  006F  00F4               	movwf	_motor1run
   521  0070                     l164:	
   522                           
   523                           ;main.c: 234: if(tmp1 >=60){
   524  0070  303C               	movlw	60
   525  0071  0236               	subwf	_tmp1,w
   526  0072  1C03               	skipc
   527  0073  287A               	goto	l1129
   528                           
   529                           ;main.c: 235: tmp1 = tmp1 - 15;
   530  0074  30F1               	movlw	241
   531  0075  07B6               	addwf	_tmp1,f
   532                           
   533                           ;main.c: 236: direction1 = -1;
   534  0076  30FF               	movlw	255
   535  0077  00AF               	movwf	_direction1
   536  0078  00B0               	movwf	_direction1+1
   537                           
   538                           ;main.c: 237: }
   539  0079  287D               	goto	l1131
   540  007A                     l1129:	
   541                           
   542                           ;main.c: 238: else
   543                           ;main.c: 239: direction1 = 1;
   544  007A  01AF               	clrf	_direction1
   545  007B  0AAF               	incf	_direction1,f
   546  007C  01B0               	clrf	_direction1+1
   547  007D                     l1131:	
   548                           
   549                           ;main.c: 244: tmp1 = tmp1 - 45;
   550  007D  30D3               	movlw	211
   551  007E  07B6               	addwf	_tmp1,f
   552                           
   553                           ;main.c: 245: if(tmp1 == 0)
   554  007F  08B6               	movf	_tmp1,f
   555  0080  1D03               	skipz
   556  0081  2885               	goto	l1137
   557                           
   558                           ;main.c: 246: incremental1 = 2;
   559  0082  3002               	movlw	2
   560  0083  00B5               	movwf	_incremental1
   561  0084  288B               	goto	l1143
   562  0085                     l1137:	
   563                           
   564                           ;main.c: 247: else if(tmp1 == 1)
   565  0085  0B36               	decfsz	_tmp1,w
   566  0086  288A               	goto	l1141
   567                           
   568                           ;main.c: 248: incremental1 = 1;
   569  0087  01B5               	clrf	_incremental1
   570  0088  0AB5               	incf	_incremental1,f
   571  0089  288B               	goto	l1143
   572  008A                     l1141:	
   573                           
   574                           ;main.c: 249: else
   575                           ;main.c: 250: incremental1 = 0;
   576  008A  01B5               	clrf	_incremental1
   577  008B                     l1143:	
   578                           
   579                           ;main.c: 253: motor1 = tmp1;
   580  008B  0836               	movf	_tmp1,w
   581  008C  00F3               	movwf	_motor1
   582                           
   583                           ;main.c: 257: tmp2 = uart_data[13];
   584  008D  082D               	movf	_uart_data+13,w
   585  008E  00F7               	movwf	_tmp2
   586                           
   587                           ;main.c: 258: if(tmp2 == 75)
   588  008F  3A4B               	xorlw	75
   589  0090  1D03               	skipz
   590  0091  2894               	goto	l1151
   591                           
   592                           ;main.c: 259: motor2run = 0x00;
   593  0092  01F6               	clrf	_motor2run
   594  0093  2896               	goto	l172
   595  0094                     l1151:	
   596                           
   597                           ;main.c: 260: else
   598                           ;main.c: 261: motor2run = 0xFF;
   599  0094  30FF               	movlw	255
   600  0095  00F6               	movwf	_motor2run
   601  0096                     l172:	
   602                           
   603                           ;main.c: 263: if(tmp2 >=60){
   604  0096  303C               	movlw	60
   605  0097  0277               	subwf	_tmp2,w
   606  0098  1C03               	skipc
   607  0099  28A0               	goto	l1157
   608                           
   609                           ;main.c: 264: tmp2 = tmp2 - 15;
   610  009A  30F1               	movlw	241
   611  009B  07F7               	addwf	_tmp2,f
   612                           
   613                           ;main.c: 265: direction2 = -1;
   614  009C  30FF               	movlw	255
   615  009D  00B1               	movwf	_direction2
   616  009E  00B2               	movwf	_direction2+1
   617                           
   618                           ;main.c: 266: }
   619  009F  28A3               	goto	l1159
   620  00A0                     l1157:	
   621                           
   622                           ;main.c: 267: else
   623                           ;main.c: 268: direction2 = 1;
   624  00A0  01B1               	clrf	_direction2
   625  00A1  0AB1               	incf	_direction2,f
   626  00A2  01B2               	clrf	_direction2+1
   627  00A3                     l1159:	
   628                           
   629                           ;main.c: 270: tmp2 = tmp2 - 45;
   630  00A3  30D3               	movlw	211
   631  00A4  07F7               	addwf	_tmp2,f
   632                           
   633                           ;main.c: 271: motor2 = tmp2;
   634  00A5  0877               	movf	_tmp2,w
   635  00A6  00F5               	movwf	_motor2
   636                           
   637                           ;main.c: 278: motor3run = 0x00;
   638  00A7  082C               	movf	_uart_data+12,w
   639  00A8  00F8               	movwf	_tmp3
   640                           
   641                           ;main.c: 282: if(tmp3 >=60){
   642  00A9  303C               	movlw	60
   643  00AA  0278               	subwf	_tmp3,w
   644  00AB  1C03               	skipc
   645  00AC  28AF               	goto	l1167
   646                           
   647                           ;main.c: 284: direction3 = -1;
   648  00AD  30F1               	movlw	241
   649  00AE  07F8               	addwf	_tmp3,f
   650  00AF                     l1167:	
   651                           ;main.c: 285: }
   652                           
   653                           
   654                           ;main.c: 292: tmp3 = tmp3 - 45;
   655  00AF  30D3               	movlw	211
   656  00B0  07F8               	addwf	_tmp3,f
   657                           
   658                           ;main.c: 294: incremental3 = 2;
   659  00B1  08F8               	movf	_tmp3,f
   660  00B2  2867               	goto	l1117
   661  00B3                     __end_of_main:	
   662                           
   663                           	psect	text1
   664  00B3                     __ptext1:	
   665 ;; *************** function _global_interrupt *****************
   666 ;; Defined at:
   667 ;;		line 62 in file "main.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;		None               void
   674 ;; Registers used:
   675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 60/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   681 ;;      Params:         0       0       0       0
   682 ;;      Locals:         0       0       0       0
   683 ;;      Temps:          4       0       0       0
   684 ;;      Totals:         4       0       0       0
   685 ;;Total ram usage:        4 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; Hardware stack levels required when called:    2
   688 ;; This function calls:
   689 ;;		_handle_counter1
   690 ;;		_handle_counter2
   691 ;; This function is called by:
   692 ;;		Interrupt level 1
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           
   697                           ;psect for function _global_interrupt
   698  00B3                     _global_interrupt:	
   699                           
   700                           ;main.c: 64: GIE = 0 ;
   701  00B3  138B               	bcf	11,7	;volatile
   702                           
   703                           ;main.c: 65: CREN = 1;
   704  00B4  1618               	bsf	24,4	;volatile
   705                           
   706                           ;main.c: 67: if(RCIF){
   707  00B5  1E8C               	btfss	12,5	;volatile
   708  00B6  28D1               	goto	i1l151
   709                           
   710                           ;main.c: 70: if(FERR == 0 && OERR == 0){
   711  00B7  1D18               	btfss	24,2	;volatile
   712  00B8  1898               	btfsc	24,1	;volatile
   713  00B9  28CD               	goto	i1l152
   714                           
   715                           ;main.c: 71: tmp_data = RCREG;
   716  00BA  081A               	movf	26,w	;volatile
   717  00BB  00F9               	movwf	_tmp_data
   718                           
   719                           ;main.c: 73: if(tmp_data == 0x55){
   720  00BC  3A55               	xorlw	85
   721  00BD  1D03               	skipz
   722  00BE  28C1               	goto	i1l883
   723  00BF                     i1l877:	
   724                           
   725                           ;main.c: 74: counter_uart = 0;
   726  00BF  01F2               	clrf	_counter_uart
   727  00C0  28EE               	goto	i1l879
   728  00C1                     i1l883:	
   729                           
   730                           ;main.c: 78: }
   731                           ;main.c: 80: uart_data[counter_uart] = tmp_data;
   732  00C1  0872               	movf	_counter_uart,w
   733  00C2  3E20               	addlw	_uart_data& (0+255)
   734  00C3  0084               	movwf	4
   735  00C4  0879               	movf	_tmp_data,w
   736  00C5  1383               	bcf	3,7	;select IRP bank0
   737  00C6  0080               	movwf	0
   738                           
   739                           ;main.c: 81: counter_uart += 1;
   740  00C7  0AF2               	incf	_counter_uart,f
   741                           
   742                           ;main.c: 82: if(counter_uart == 15){
   743  00C8  0872               	movf	_counter_uart,w
   744  00C9  3A0F               	xorlw	15
   745  00CA  1903               	btfsc	3,2
   746  00CB  28BF               	goto	i1l877
   747  00CC  28EE               	goto	i1l879
   748  00CD                     i1l152:	
   749                           
   750                           ;main.c: 89: else{
   751                           ;main.c: 90: CREN = 0;
   752  00CD  1218               	bcf	24,4	;volatile
   753                           
   754                           ;main.c: 91: tmp_data = RCREG;
   755  00CE  081A               	movf	26,w	;volatile
   756  00CF  00F9               	movwf	_tmp_data
   757  00D0  28BF               	goto	i1l877
   758  00D1                     i1l151:	
   759                           
   760                           ;main.c: 98: }
   761                           ;main.c: 101: if(T0IF){
   762  00D1  1D0B               	btfss	11,2	;volatile
   763  00D2  28EA               	goto	i1l157
   764                           
   765                           ;main.c: 102: T0IF = 0;
   766  00D3  110B               	bcf	11,2	;volatile
   767                           
   768                           ;main.c: 104: loop1 -= 1;
   769  00D4  30FF               	movlw	-1
   770  00D5  07B3               	addwf	_loop1,f
   771  00D6  1C03               	skipc
   772  00D7  03B4               	decf	_loop1+1,f
   773                           
   774                           ;main.c: 105: if(loop1 <= 0){
   775  00D8  0834               	movf	_loop1+1,w
   776  00D9  3A80               	xorlw	128
   777  00DA  00FF               	movwf	127
   778  00DB  3080               	movlw	128
   779  00DC  027F               	subwf	127,w
   780  00DD  1D03               	skipz
   781  00DE  28E1               	goto	u23_25
   782  00DF  3001               	movlw	1
   783  00E0  0233               	subwf	_loop1,w
   784  00E1                     u23_25:	
   785  00E1  1803               	skipnc
   786  00E2  28E6               	goto	i1l911
   787                           
   788                           ;main.c: 106: handle_counter1();
   789  00E3  20FA  118A         	fcall	_handle_counter1
   790  00E5  28EE               	goto	i1l879
   791  00E6                     i1l911:	
   792                           
   793                           ;main.c: 109: }
   794                           ;main.c: 110: TMR0 = 0;
   795  00E6  1283               	bcf	3,5	;RP0=0, select bank0
   796  00E7  1303               	bcf	3,6	;RP1=0, select bank0
   797  00E8  0181               	clrf	1	;volatile
   798  00E9  28EE               	goto	i1l879
   799  00EA                     i1l157:	
   800                           
   801                           ;main.c: 115: }
   802                           ;main.c: 120: if(TMR1IF){
   803  00EA  1C0C               	btfss	12,0	;volatile
   804  00EB  28EF               	goto	i1l154
   805                           
   806                           ;main.c: 121: TMR1IF = 0;
   807  00EC  100C               	bcf	12,0	;volatile
   808                           
   809                           ;main.c: 122: handle_counter2();
   810  00ED  2112               	fcall	_handle_counter2
   811  00EE                     i1l879:	
   812                           
   813                           ;main.c: 75: GIE = 1;
   814  00EE  178B               	bsf	11,7	;volatile
   815  00EF                     i1l154:	
   816  00EF  087D               	movf	??_global_interrupt+3,w
   817  00F0  00FF               	movwf	127
   818  00F1  087C               	movf	??_global_interrupt+2,w
   819  00F2  008A               	movwf	10
   820  00F3  087B               	movf	??_global_interrupt+1,w
   821  00F4  0084               	movwf	4
   822  00F5  0E7A               	swapf	??_global_interrupt^(0+-128),w
   823  00F6  0083               	movwf	3
   824  00F7  0EFE               	swapf	126,f
   825  00F8  0E7E               	swapf	126,w
   826  00F9  0009               	retfie
   827  00FA                     __end_of_global_interrupt:	
   828  00FA                     __ptext3:	
   829 ;; *************** function _handle_counter1 *****************
   830 ;; Defined at:
   831 ;;		line 315 in file "main.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;		None
   834 ;; Auto vars:     Size  Location     Type
   835 ;;		None
   836 ;; Return value:  Size  Location     Type
   837 ;;		None               void
   838 ;; Registers used:
   839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 60/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   845 ;;      Params:         0       0       0       0
   846 ;;      Locals:         0       0       0       0
   847 ;;      Temps:          0       0       0       0
   848 ;;      Totals:         0       0       0       0
   849 ;;Total ram usage:        0 bytes
   850 ;; Hardware stack levels used:    2
   851 ;; This function calls:
   852 ;;		Nothing
   853 ;; This function is called by:
   854 ;;		_global_interrupt
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           
   859                           ;psect for function _handle_counter1
   860  00FA                     _handle_counter1:	
   861                           
   862                           ;main.c: 316: TMR0 = motor1Array[motor1];
   863                           
   864                           ;incstack = 0
   865                           ; Regs used in _handle_counter1: [wreg-fsr0h+status,2+status,0+pclath]
   866  00FA  0873               	movf	_motor1,w
   867  00FB  3E01               	addlw	low (_motor1Array-__stringbase)
   868  00FC  0084               	movwf	4
   869  00FD  118A  212C  118A   	fcall	stringdir
   870  0100  1283               	bcf	3,5	;RP0=0, select bank0
   871  0101  1303               	bcf	3,6	;RP1=0, select bank0
   872  0102  0081               	movwf	1	;volatile
   873                           
   874                           ;main.c: 317: loop1 = incremental1;
   875  0103  0835               	movf	_incremental1,w
   876  0104  00B3               	movwf	_loop1
   877  0105  01B4               	clrf	_loop1+1
   878                           
   879                           ;main.c: 318: counter1 += direction1;
   880  0106  082F               	movf	_direction1,w
   881  0107  07F0               	addwf	_counter1,f
   882                           
   883                           ;main.c: 319: counter1 &= 0x07;
   884  0108  3007               	movlw	7
   885  0109  05F0               	andwf	_counter1,f
   886                           
   887                           ;main.c: 320: PORTA = posArray1[counter1] & motor1run;
   888  010A  0870               	movf	_counter1,w
   889  010B  3E2E               	addlw	low (_posArray1-__stringbase)
   890  010C  0084               	movwf	4
   891  010D  118A  212C         	fcall	stringdir
   892  010F  0574               	andwf	_motor1run,w
   893  0110  0085               	movwf	5	;volatile
   894  0111  0008               	return
   895  0112                     __end_of_handle_counter1:	
   896  007E                     btemp	set	126	;btemp
   897  007E                     wtemp	set	126
   898  007E                     wtemp0	set	126
   899  0080                     wtemp1	set	128
   900  0082                     wtemp2	set	130
   901  0084                     wtemp3	set	132
   902  0086                     wtemp4	set	134
   903  0088                     wtemp5	set	136
   904  007F                     wtemp6	set	127
   905  007E                     ttemp	set	126
   906  007E                     ttemp0	set	126
   907  0081                     ttemp1	set	129
   908  0084                     ttemp2	set	132
   909  0087                     ttemp3	set	135
   910  007F                     ttemp4	set	127
   911  007E                     ltemp	set	126
   912  007E                     ltemp0	set	126
   913  0082                     ltemp1	set	130
   914  0086                     ltemp2	set	134
   915  0080                     ltemp3	set	128
   916  0112                     __ptext2:	
   917 ;; *************** function _handle_counter2 *****************
   918 ;; Defined at:
   919 ;;		line 306 in file "main.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;		None               void
   926 ;; Registers used:
   927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   928 ;; Tracked objects:
   929 ;;		On entry : 60/0
   930 ;;		On exit  : 60/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   933 ;;      Params:         0       0       0       0
   934 ;;      Locals:         0       0       0       0
   935 ;;      Temps:          0       0       0       0
   936 ;;      Totals:         0       0       0       0
   937 ;;Total ram usage:        0 bytes
   938 ;; Hardware stack levels used:    2
   939 ;; This function calls:
   940 ;;		Nothing
   941 ;; This function is called by:
   942 ;;		_global_interrupt
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           
   947                           ;psect for function _handle_counter2
   948  0112                     _handle_counter2:	
   949                           
   950                           ;main.c: 307: counter2 += direction2;
   951                           
   952                           ;incstack = 0
   953                           ; Regs used in _handle_counter2: [wreg-fsr0h+status,2+status,0+pclath]
   954  0112  0831               	movf	_direction2,w
   955  0113  07F1               	addwf	_counter2,f
   956                           
   957                           ;main.c: 308: counter2 &= 0x07;
   958  0114  3007               	movlw	7
   959  0115  05F1               	andwf	_counter2,f
   960                           
   961                           ;main.c: 309: TMR1H = motor2_1Array[motor2];
   962  0116  0875               	movf	_motor2,w
   963  0117  3E10               	addlw	low (_motor2_1Array-__stringbase)
   964  0118  0084               	movwf	4
   965  0119  118A  212C  118A   	fcall	stringdir
   966  011C  008F               	movwf	15	;volatile
   967                           
   968                           ;main.c: 310: TMR1L = motor2_2Array[motor2];
   969  011D  0875               	movf	_motor2,w
   970  011E  3E1F               	addlw	low (_motor2_2Array-__stringbase)
   971  011F  0084               	movwf	4
   972  0120  118A  212C  118A   	fcall	stringdir
   973  0123  008E               	movwf	14	;volatile
   974                           
   975                           ;main.c: 312: PORTC = (posArray2[counter2] & motor2run);
   976  0124  0871               	movf	_counter2,w
   977  0125  3E36               	addlw	low (_posArray2-__stringbase)
   978  0126  0084               	movwf	4
   979  0127  118A  212C         	fcall	stringdir
   980  0129  0576               	andwf	_motor2run,w
   981  012A  0087               	movwf	7	;volatile
   982  012B  0008               	return
   983  012C                     __end_of_handle_counter2:	
   984                           
   985                           	psect	intentry
   986  0004                     __pintentry:	
   987                           ;incstack = 0
   988                           ; Regs used in _global_interrupt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   989                           
   990  0004                     interrupt_function:	
   991  007E                     saved_w	set	btemp
   992  0004  00FE               	movwf	btemp
   993  0005  0E03               	swapf	3,w
   994  0006  00FA               	movwf	??_global_interrupt
   995  0007  0804               	movf	4,w
   996  0008  00FB               	movwf	??_global_interrupt+1
   997  0009  080A               	movf	10,w
   998  000A  00FC               	movwf	??_global_interrupt+2
   999  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1000  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1001  000D  087F               	movf	btemp+1,w
  1002  000E  00FD               	movwf	??_global_interrupt+3
  1003  000F  118A  28B3         	ljmp	_global_interrupt


Data Sizes:
    Strings     0
    Constant    61
    Data        15
    BSS         17
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      14
    BANK0            80      0      23
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _global_interrupt in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _global_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _global_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _global_interrupt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _global_interrupt                                     4     4      0       0
                                              0 COMMON     4     4      0
                    _handle_counter1
                    _handle_counter2
 ---------------------------------------------------------------------------------
 (3) _handle_counter2                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _handle_counter1                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _global_interrupt (ROOT)
   _handle_counter1
   _handle_counter2

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       5        0.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      17       3       28.8%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      25      10        0.0%
ABS                  0      0      25       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Jun 10 20:23:31 2015

                        pc 0002                __CFG_CP$OFF 0000                         fsr 0004  
                      l172 0096                        l164 0070                        _GIE 005F  
             __CFG_CPD$OFF 0000                        fsr0 0004                        indf 0000  
             __CFG_IESO$ON 0000                       l1131 007D                       l1123 006E  
                     l1141 008A                       l1117 0067                       l1151 0094  
                     l1143 008B                       l1137 0085                       l1129 007A  
                     l1157 00A0                       l1167 00AF                       l1159 00A3  
                     _BRGH 04C2                       _T0IE 005D                       _T0IF 005A  
                     _CREN 00C4                       _FERR 00C2                       _PEIE 005E  
                     _RCIE 0465                       _RCIF 0065                       _OERR 00C1  
                     _TMR0 0001                       _SPEN 00C7                       _SYNC 04C4  
            __CFG_FCMEN$ON 0000                       _main 0037                       _tmp1 0036  
                     _tmp2 0077                       _tmp3 0078                       btemp 007E  
            __CFG_BOREN$ON 0000                       ltemp 007E                       start 0011  
                     ttemp 007E                       wtemp 007E                      ?_main 007A  
                    _BRG16 04DB              __CFG_WDTE$OFF 0000                      _ANSEL 011E  
                    i1l151 00D1                      i1l152 00CD                      i1l154 00EF  
                    i1l157 00EA                      i1l911 00E6                      i1l883 00C1  
                    i1l877 00BF                      i1l879 00EE                      _RCREG 001A  
                    u23_25 00E1                      _TMR1H 000F                      _TMR1L 000E  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087              __CFG_PWRTE$ON 0000                      _loop1 0033  
                    pclath 000A                      ltemp0 007E                      ltemp1 0082  
                    ltemp2 0086                      ltemp3 0080                      ttemp0 007E  
                    ttemp1 0081                      ttemp2 0084                      ttemp3 0087  
                    ttemp4 007F                      status 0003                      wtemp0 007E  
                    wtemp1 0080                      wtemp2 0082                      wtemp3 0084  
                    wtemp4 0086                      wtemp5 0088                      wtemp6 007F  
          _handle_counter1 00FA            _handle_counter2 0112             __CFG_MCLRE$OFF 0000  
          __initialization 0013               __end_of_main 00B3                     ??_main 0000  
                   _ANSELH 011F                     _OSCCON 008F                     _TMR1GE 0086  
                   _TMR1IE 0460                     _TMR1IF 0060                     _TMR1CS 0081  
                   _SPBRGH 009A                     _TMR1ON 0080      __end_of_motor2_1Array 0150  
    __end_of_motor2_2Array 015F                     _motor1 0073                     _motor2 0075  
                   saved_w 007E    __end_of_handle_counter1 0112    __end_of_handle_counter2 012C  
  __end_of__initialization 0034  __size_of_global_interrupt 0047             __pcstackCOMMON 007A  
             __pidataBANK0 0000                 __pbssBANK0 002F                 __pmaintext 0037  
               __pintentry 0004                 _direction1 002F                 _direction2 0031  
                  _T1OSCEN 0083                    _OSCTUNE 0090                 __stringtab 012C  
         ?_handle_counter1 007A           ?_handle_counter2 007A                    __ptext1 00B3  
                  __ptext2 0112                    __ptext3 00FA                  _T1CONbits 0010  
     end_of_initialization 0034          __end_of_posArray1 0167          __end_of_posArray2 016F  
         _global_interrupt 00B3        start_initialization 0013               _counter_uart 0072  
             _incremental1 0035                __pdataBANK0 0020                __pbssCOMMON 0070  
                ___latbits 0001              __pcstackBANK0 0000                  __pnvBANK0 0036  
            _motor2_1Array 0141              _motor2_2Array 0150                  __pstrings 012C  
 __end_of_global_interrupt 00FA          interrupt_function 0004                  _posArray1 015F  
                _posArray2 0167                  _motor1run 0074   __size_of_handle_counter1 0018  
 __size_of_handle_counter2 001A                  _motor2run 0076                  _uart_data 0020  
              __stringbase 0131        __end_of_motor1Array 0141         __end_of__stringtab 0132  
                 _counter1 0070                   _counter2 0071              __size_of_main 007C  
                 _tmp_data 0079          ??_handle_counter1 007A          ??_handle_counter2 007A  
                 intlevel1 0000                _motor1Array 0132                  stringcode 012C  
               _OPTION_REG 0081                   stringdir 012C          ?_global_interrupt 007A  
                 stringtab 012C         ??_global_interrupt 007A          __CFG_FOSC$INTRCIO 0000  
