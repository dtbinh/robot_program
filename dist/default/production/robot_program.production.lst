

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat May 23 23:38:56 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F687
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     	;# 
    21  0001                     	;# 
    22  0002                     	;# 
    23  0003                     	;# 
    24  0004                     	;# 
    25  0005                     	;# 
    26  0006                     	;# 
    27  0007                     	;# 
    28  000A                     	;# 
    29  000B                     	;# 
    30  000C                     	;# 
    31  000D                     	;# 
    32  000E                     	;# 
    33  000E                     	;# 
    34  000F                     	;# 
    35  0010                     	;# 
    36  0013                     	;# 
    37  0014                     	;# 
    38  0018                     	;# 
    39  0019                     	;# 
    40  001A                     	;# 
    41  001E                     	;# 
    42  001F                     	;# 
    43  0081                     	;# 
    44  0085                     	;# 
    45  0086                     	;# 
    46  0087                     	;# 
    47  008C                     	;# 
    48  008D                     	;# 
    49  008E                     	;# 
    50  008F                     	;# 
    51  0090                     	;# 
    52  0093                     	;# 
    53  0093                     	;# 
    54  0093                     	;# 
    55  0094                     	;# 
    56  0095                     	;# 
    57  0095                     	;# 
    58  0096                     	;# 
    59  0096                     	;# 
    60  0097                     	;# 
    61  0098                     	;# 
    62  0099                     	;# 
    63  009A                     	;# 
    64  009B                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010C                     	;# 
    69  010D                     	;# 
    70  0115                     	;# 
    71  0116                     	;# 
    72  0118                     	;# 
    73  0119                     	;# 
    74  011A                     	;# 
    75  011B                     	;# 
    76  011E                     	;# 
    77  011F                     	;# 
    78  018C                     	;# 
    79  018D                     	;# 
    80  019E                     	;# 
    81                           
    82                           	psect	idataCOMMON
    83  015B                     __pidataCOMMON:	
    84                           
    85                           ;initializer for _motor1_data
    86  015B  342D               	retlw	45
    87                           
    88                           	psect	idataBANK0
    89  014B                     __pidataBANK0:	
    90                           
    91                           ;initializer for _motor_data
    92  014B  342D               	retlw	45
    93  014C  342D               	retlw	45
    94  014D  342D               	retlw	45
    95                           
    96                           ;initializer for _motor1stop
    97  014E  3401               	retlw	1
    98                           
    99                           ;initializer for _motor2_data
   100  014F  342D               	retlw	45
   101                           
   102                           ;initializer for _motor2stop
   103  0150  3401               	retlw	1
   104                           
   105                           ;initializer for _motor3_data
   106  0151  342D               	retlw	45
   107                           
   108                           ;initializer for _motor3stop
   109  0152  3401               	retlw	1
   110                           
   111                           	psect	strings
   112  0100                     __pstrings:	
   113  0100                     stringtab:	
   114  0100                     __stringtab:	
   115  0100                     stringcode:	
   116                           ;	String table - string pointers are 1 byte each
   117                           
   118  0100                     stringdir:	
   119  0100  3001               	movlw	high stringdir
   120  0101  008A               	movwf	10
   121  0102  0804               	movf	4,w
   122  0103  0A84               	incf	4,f
   123  0104  0782               	addwf	2,f
   124  0105                     __stringbase:	
   125  0105  3400               	retlw	0
   126  0106                     __end_of__stringtab:	
   127  0106                     _motor1Array:	
   128  0106  340F               	retlw	15
   129  0107  3487               	retlw	135
   130  0108  3405               	retlw	5
   131  0109  3443               	retlw	67
   132  010A  3469               	retlw	105
   133  010B  3482               	retlw	130
   134  010C  3494               	retlw	148
   135  010D  34A1               	retlw	161
   136  010E  34AC               	retlw	172
   137  010F  34B4               	retlw	180
   138  0110  34BB               	retlw	187
   139  0111  34C0               	retlw	192
   140  0112  34C5               	retlw	197
   141  0113  34C9               	retlw	201
   142  0114  34CD               	retlw	205
   143  0115                     __end_of_motor1Array:	
   144  0115                     _motor2_1Array:	
   145  0115  34A2               	retlw	162
   146  0116  34D1               	retlw	209
   147  0117  34E0               	retlw	224
   148  0118  34E8               	retlw	232
   149  0119  34ED               	retlw	237
   150  011A  34F0               	retlw	240
   151  011B  34F2               	retlw	242
   152  011C  34F4               	retlw	244
   153  011D  34F5               	retlw	245
   154  011E  34F6               	retlw	246
   155  011F  34F7               	retlw	247
   156  0120  34F8               	retlw	248
   157  0121  34F8               	retlw	248
   158  0122  34F9               	retlw	249
   159  0123  34F9               	retlw	249
   160  0124                     __end_of_motor2_1Array:	
   161  0124                     _motor2_2Array:	
   162  0124  343F               	retlw	63
   163  0125  341F               	retlw	31
   164  0126  34BF               	retlw	191
   165  0127  348F               	retlw	143
   166  0128  343F               	retlw	63
   167  0129  345F               	retlw	95
   168  012A  349A               	retlw	154
   169  012B  3447               	retlw	71
   170  012C  3494               	retlw	148
   171  012D  349F               	retlw	159
   172  012E  3479               	retlw	121
   173  012F  342F               	retlw	47
   174  0130  34C9               	retlw	201
   175  0131  344D               	retlw	77
   176  0132  34BF               	retlw	191
   177  0133                     __end_of_motor2_2Array:	
   178  0133                     _posArray1:	
   179  0133  3411               	retlw	17
   180  0134  3401               	retlw	1
   181  0135  3403               	retlw	3
   182  0136  3402               	retlw	2
   183  0137  3406               	retlw	6
   184  0138  3404               	retlw	4
   185  0139  3414               	retlw	20
   186  013A  3410               	retlw	16
   187  013B                     __end_of_posArray1:	
   188  013B                     _posArray2:	
   189  013B  3409               	retlw	9
   190  013C  3401               	retlw	1
   191  013D  3403               	retlw	3
   192  013E  3402               	retlw	2
   193  013F  3406               	retlw	6
   194  0140  3404               	retlw	4
   195  0141  340C               	retlw	12
   196  0142  3408               	retlw	8
   197  0143                     __end_of_posArray2:	
   198  0143                     _posArray3:	
   199  0143  3490               	retlw	144
   200  0144  3410               	retlw	16
   201  0145  3430               	retlw	48
   202  0146  3420               	retlw	32
   203  0147  3460               	retlw	96
   204  0148  3440               	retlw	64
   205  0149  34C0               	retlw	192
   206  014A  3480               	retlw	128
   207  014B                     __end_of_posArray3:	
   208                           
   209                           	psect	nvCOMMON
   210  007B                     __pnvCOMMON:	
   211  007B                     _tmp1:	
   212  007B                     	ds	1
   213  0005                     _PORTA	set	5
   214  001A                     _RCREG	set	26
   215  0010                     _T1CONbits	set	16
   216  0001                     _TMR0	set	1
   217  000F                     _TMR1H	set	15
   218  00C4                     _CREN	set	196
   219  00C2                     _FERR	set	194
   220  005F                     _GIE	set	95
   221  00C1                     _OERR	set	193
   222  005E                     _PEIE	set	94
   223  0065                     _RCIF	set	101
   224  00C7                     _SPEN	set	199
   225  005D                     _T0IE	set	93
   226  005A                     _T0IF	set	90
   227  0083                     _T1OSCEN	set	131
   228  0081                     _TMR1CS	set	129
   229  0086                     _TMR1GE	set	134
   230  0080                     _TMR1ON	set	128
   231  0081                     _OPTION_REG	set	129
   232  008F                     _OSCCON	set	143
   233  0090                     _OSCTUNE	set	144
   234  0099                     _SPBRG	set	153
   235  009A                     _SPBRGH	set	154
   236  0085                     _TRISA	set	133
   237  0086                     _TRISB	set	134
   238  0087                     _TRISC	set	135
   239  04DB                     _BRG16	set	1243
   240  04C2                     _BRGH	set	1218
   241  0465                     _RCIE	set	1125
   242  04C4                     _SYNC	set	1220
   243  011E                     _ANSEL	set	286
   244  011F                     _ANSELH	set	287
   245                           
   246                           ; #config settings
   247  0000                     
   248                           	psect	cinit
   249  0011                     start_initialization:	
   250  0011                     __initialization:	
   251                           
   252                           ; Clear objects allocated to COMMON
   253  0011  3076               	movlw	low __pbssCOMMON
   254  0012  0084               	movwf	4
   255  0013  307B               	movlw	low (__pbssCOMMON+5)
   256  0014  2153               	fcall	clear_ram0
   257                           
   258                           ; Clear objects allocated to BANK0
   259  0015  1383               	bcf	3,7	;select IRP bank0
   260  0016  3020               	movlw	low __pbssBANK0
   261  0017  0084               	movwf	4
   262  0018  3036               	movlw	low (__pbssBANK0+22)
   263  0019  2153               	fcall	clear_ram0
   264                           
   265                           ; Initialize objects allocated to BANK0
   266  001A  214B               	fcall	__pidataBANK0	;fetch initializer
   267  001B  00B6               	movwf	__pdataBANK0& (0+127)
   268  001C  214C               	fcall	__pidataBANK0+1	;fetch initializer
   269  001D  00B7               	movwf	(__pdataBANK0+1)& (0+127)
   270  001E  214D               	fcall	__pidataBANK0+2	;fetch initializer
   271  001F  00B8               	movwf	(__pdataBANK0+2)& (0+127)
   272  0020  214E               	fcall	__pidataBANK0+3	;fetch initializer
   273  0021  00B9               	movwf	(__pdataBANK0+3)& (0+127)
   274  0022  214F               	fcall	__pidataBANK0+4	;fetch initializer
   275  0023  00BA               	movwf	(__pdataBANK0+4)& (0+127)
   276  0024  2150               	fcall	__pidataBANK0+5	;fetch initializer
   277  0025  00BB               	movwf	(__pdataBANK0+5)& (0+127)
   278  0026  2151               	fcall	__pidataBANK0+6	;fetch initializer
   279  0027  00BC               	movwf	(__pdataBANK0+6)& (0+127)
   280  0028  2152               	fcall	__pidataBANK0+7	;fetch initializer
   281  0029  00BD               	movwf	(__pdataBANK0+7)& (0+127)
   282                           
   283                           ; Initialize objects allocated to COMMON
   284  002A  215B               	fcall	__pidataCOMMON	;fetch initializer
   285  002B  00FC               	movwf	__pdataCOMMON& (0+127)
   286  002C                     end_of_initialization:	
   287                           ;End of C runtime variable initialization code
   288                           
   289  002C                     __end_of__initialization:	
   290  002C  0183               	clrf	3
   291  002D  282E               	ljmp	_main	;jump to C main() function
   292                           
   293                           	psect	bssCOMMON
   294  0076                     __pbssCOMMON:	
   295  0076                     _counter1:	
   296  0076                     	ds	2
   297  0078                     _incremental1:	
   298  0078                     	ds	1
   299  0079                     _motor1:	
   300  0079                     	ds	1
   301  007A                     _tmp_data:	
   302  007A                     	ds	1
   303                           
   304                           	psect	dataCOMMON
   305  007C                     __pdataCOMMON:	
   306  007C                     _motor1_data:	
   307  007C                     	ds	1
   308                           
   309                           	psect	bssBANK0
   310  0020                     __pbssBANK0:	
   311  0020                     _counter2:	
   312  0020                     	ds	2
   313  0022                     _counter3:	
   314  0022                     	ds	2
   315  0024                     _direction1:	
   316  0024                     	ds	2
   317  0026                     _direction2:	
   318  0026                     	ds	2
   319  0028                     _direction3:	
   320  0028                     	ds	2
   321  002A                     _loop1:	
   322  002A                     	ds	2
   323  002C                     _loop3:	
   324  002C                     	ds	2
   325  002E                     _counter_uart:	
   326  002E                     	ds	1
   327  002F                     _incremental3:	
   328  002F                     	ds	1
   329  0030                     _init_received:	
   330  0030                     	ds	1
   331  0031                     _motor2:	
   332  0031                     	ds	1
   333  0032                     _motor3:	
   334  0032                     	ds	1
   335  0033                     _tmp2:	
   336  0033                     	ds	1
   337  0034                     _tmp3:	
   338  0034                     	ds	1
   339  0035                     _tmp_data2:	
   340  0035                     	ds	1
   341                           
   342                           	psect	dataBANK0
   343  0036                     __pdataBANK0:	
   344  0036                     _motor_data:	
   345  0036                     	ds	3
   346  0039                     _motor1stop:	
   347  0039                     	ds	1
   348  003A                     _motor2_data:	
   349  003A                     	ds	1
   350  003B                     _motor2stop:	
   351  003B                     	ds	1
   352  003C                     _motor3_data:	
   353  003C                     	ds	1
   354  003D                     _motor3stop:	
   355  003D                     	ds	1
   356                           
   357                           	psect	clrtext
   358  0153                     clear_ram0:	
   359                           ;	Called with FSR containing the base address, and
   360                           ;	W with the last address+1
   361                           
   362  0153  0064               	clrwdt	;clear the watchdog before getting into this loop
   363  0154                     clrloop0:	
   364  0154  0180               	clrf	0	;clear RAM location pointed to by FSR
   365  0155  0A84               	incf	4,f	;increment pointer
   366  0156  0604               	xorwf	4,w	;XOR with final address
   367  0157  1903               	btfsc	3,2	;have we reached the end yet?
   368  0158  3400               	retlw	0	;all done for this memory range, return
   369  0159  0604               	xorwf	4,w	;XOR again to restore value
   370  015A  2954               	goto	clrloop0	;do the next byte
   371                           
   372                           	psect	cstackCOMMON
   373  0070                     __pcstackCOMMON:	
   374  0070                     ?_global_interrupt:	
   375  0070                     ??_global_interrupt:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0070                     ?_main:	
   379                           ; 0 bytes @ 0x0
   380                           
   381                           
   382                           ; 2 bytes @ 0x0
   383  0070                     	ds	6
   384                           
   385                           	psect	cstackBANK0
   386  003E                     __pcstackBANK0:	
   387  003E                     ??_main:	
   388                           
   389                           ; 0 bytes @ 0x0
   390  003E                     	ds	1
   391                           
   392                           	psect	maintext
   393  002E                     __pmaintext:	
   394 ;;
   395 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   396 ;;
   397 ;; *************** function _main *****************
   398 ;; Defined at:
   399 ;;		line 150 in file "main.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  2  147[COMMON] int 
   406 ;; Registers used:
   407 ;;		wreg, status,2, status,0
   408 ;; Tracked objects:
   409 ;;		On entry : 17F/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMMON   BANK0   BANK1
   413 ;;      Params:         0       0       0
   414 ;;      Locals:         0       0       0
   415 ;;      Temps:          0       1       0
   416 ;;      Totals:         0       1       0
   417 ;;Total ram usage:        1 bytes
   418 ;; Hardware stack levels required when called:    2
   419 ;; This function calls:
   420 ;;		Nothing
   421 ;; This function is called by:
   422 ;;		Startup code after reset
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           
   427                           ;psect for function _main
   428  002E                     _main:	
   429                           
   430                           ;main.c: 152: OSCCON = 0x00;
   431                           
   432                           ;incstack = 0
   433                           ; Regs used in _main: [wreg+status,2+status,0]
   434  002E  1683               	bsf	3,5	;RP0=1, select bank1
   435  002F  1303               	bcf	3,6	;RP1=0, select bank1
   436  0030  018F               	clrf	15	;volatile
   437                           
   438                           ;main.c: 153: OSCCON |= 0b01110001;
   439  0031  3071               	movlw	113
   440  0032  1283               	bcf	3,5	;RP0=0, select bank0
   441  0033  1303               	bcf	3,6	;RP1=0, select bank0
   442  0034  00BE               	movwf	??_main
   443  0035  083E               	movf	??_main,w
   444  0036  1683               	bsf	3,5	;RP0=1, select bank1
   445  0037  1303               	bcf	3,6	;RP1=0, select bank1
   446  0038  048F               	iorwf	15,f	;volatile
   447                           
   448                           ;main.c: 154: OSCTUNE = 0x00;
   449  0039  0190               	clrf	16	;volatile
   450                           
   451                           ;main.c: 158: OPTION_REG &= 0b11010000;
   452  003A  30D0               	movlw	208
   453  003B  1283               	bcf	3,5	;RP0=0, select bank0
   454  003C  1303               	bcf	3,6	;RP1=0, select bank0
   455  003D  00BE               	movwf	??_main
   456  003E  083E               	movf	??_main,w
   457  003F  1683               	bsf	3,5	;RP0=1, select bank1
   458  0040  1303               	bcf	3,6	;RP1=0, select bank1
   459  0041  0581               	andwf	1,f	;volatile
   460                           
   461                           ;main.c: 159: OPTION_REG |= 0b00000100;
   462  0042  1501               	bsf	1,2	;volatile
   463                           
   464                           ;main.c: 160: TMR0 = 0x00;
   465  0043  1283               	bcf	3,5	;RP0=0, select bank0
   466  0044  1303               	bcf	3,6	;RP1=0, select bank0
   467  0045  0181               	clrf	1	;volatile
   468                           
   469                           ;main.c: 161: T0IE = 1;
   470  0046  168B               	bsf	11,5	;volatile
   471                           
   472                           ;main.c: 166: TMR1GE = 0;
   473  0047  1310               	bcf	16,6	;volatile
   474                           
   475                           ;main.c: 167: T1CONbits.T1CKPS0 = 0;
   476  0048  1210               	bcf	16,4	;volatile
   477                           
   478                           ;main.c: 168: T1CONbits.T1CKPS1 = 0;
   479  0049  1290               	bcf	16,5	;volatile
   480                           
   481                           ;main.c: 169: T1OSCEN = 0;
   482  004A  1190               	bcf	16,3	;volatile
   483                           
   484                           ;main.c: 170: TMR1CS = 0;
   485  004B  1090               	bcf	16,1	;volatile
   486                           
   487                           ;main.c: 171: TMR1ON = 1;
   488  004C  1410               	bsf	16,0	;volatile
   489                           
   490                           ;main.c: 172: TMR1H = 0x00;
   491  004D  018F               	clrf	15	;volatile
   492                           
   493                           ;main.c: 173: TMR1H = 0x00;
   494  004E  018F               	clrf	15	;volatile
   495                           
   496                           ;main.c: 180: BRG16 = 0;
   497  004F  1683               	bsf	3,5	;RP0=1, select bank1
   498  0050  1303               	bcf	3,6	;RP1=0, select bank1
   499  0051  119B               	bcf	27,3	;volatile
   500                           
   501                           ;main.c: 181: BRGH = 0;
   502  0052  1118               	bcf	24,2	;volatile
   503                           
   504                           ;main.c: 182: SPBRGH = 0;
   505  0053  019A               	clrf	26	;volatile
   506                           
   507                           ;main.c: 183: SPBRG = 0x0C;
   508  0054  300C               	movlw	12
   509  0055  0099               	movwf	25	;volatile
   510                           
   511                           ;main.c: 185: SYNC = 0;
   512  0056  1218               	bcf	24,4	;volatile
   513                           
   514                           ;main.c: 186: SPEN = 1;
   515  0057  1283               	bcf	3,5	;RP0=0, select bank0
   516  0058  1303               	bcf	3,6	;RP1=0, select bank0
   517  0059  1798               	bsf	24,7	;volatile
   518                           
   519                           ;main.c: 187: RCIE = 1;
   520  005A  1683               	bsf	3,5	;RP0=1, select bank1
   521  005B  1303               	bcf	3,6	;RP1=0, select bank1
   522  005C  168C               	bsf	12,5	;volatile
   523                           
   524                           ;main.c: 188: CREN = 1;
   525  005D  1283               	bcf	3,5	;RP0=0, select bank0
   526  005E  1303               	bcf	3,6	;RP1=0, select bank0
   527  005F  1618               	bsf	24,4	;volatile
   528                           
   529                           ;main.c: 208: TRISA = 0x00;
   530  0060  1683               	bsf	3,5	;RP0=1, select bank1
   531  0061  1303               	bcf	3,6	;RP1=0, select bank1
   532  0062  0185               	clrf	5	;volatile
   533                           
   534                           ;main.c: 209: TRISB = 0b00100000;
   535  0063  3020               	movlw	32
   536  0064  0086               	movwf	6	;volatile
   537                           
   538                           ;main.c: 210: TRISC = 0x00;
   539  0065  0187               	clrf	7	;volatile
   540                           
   541                           ;main.c: 211: ANSEL = 0x00;
   542  0066  1283               	bcf	3,5	;RP0=0, select bank2
   543  0067  1703               	bsf	3,6	;RP1=1, select bank2
   544  0068  019E               	clrf	30	;volatile
   545                           
   546                           ;main.c: 212: ANSELH = 0x00;
   547  0069  019F               	clrf	31	;volatile
   548                           
   549                           ;main.c: 215: PORTA = 0x00;
   550  006A  1283               	bcf	3,5	;RP0=0, select bank0
   551  006B  1303               	bcf	3,6	;RP1=0, select bank0
   552  006C  0185               	clrf	5	;volatile
   553                           
   554                           ;main.c: 216: PEIE = 1;
   555  006D  170B               	bsf	11,6	;volatile
   556                           
   557                           ;main.c: 217: GIE = 1;
   558  006E  178B               	bsf	11,7	;volatile
   559  006F                     l950:	
   560                           ;main.c: 219: while(1){
   561                           
   562                           
   563                           ;main.c: 223: tmp1 = motor1_data;
   564  006F  087C               	movf	_motor1_data,w
   565  0070  00BE               	movwf	??_main
   566  0071  083E               	movf	??_main,w
   567  0072  00FB               	movwf	_tmp1
   568                           
   569                           ;main.c: 226: if(tmp1 >=60){
   570  0073  303C               	movlw	60
   571  0074  027B               	subwf	_tmp1,w
   572  0075  1C03               	skipc
   573  0076  2880               	goto	l958
   574                           
   575                           ;main.c: 227: tmp1 = tmp1 - 15;
   576  0077  087B               	movf	_tmp1,w
   577  0078  3EF1               	addlw	241
   578  0079  00BE               	movwf	??_main
   579  007A  083E               	movf	??_main,w
   580  007B  00FB               	movwf	_tmp1
   581                           
   582                           ;main.c: 228: direction1 = -1;
   583  007C  30FF               	movlw	255
   584  007D  00A4               	movwf	_direction1
   585  007E  30FF               	movlw	255
   586  007F  2883               	goto	L1
   587  0080                     l958:	
   588                           ;main.c: 229: }
   589                           
   590                           
   591                           ;main.c: 230: else
   592                           ;main.c: 231: direction1 = 1;
   593  0080  3001               	movlw	1
   594  0081  00A4               	movwf	_direction1
   595  0082  3000               	movlw	0
   596  0083                     L1:	
   597  0083  00A5               	movwf	_direction1+1
   598                           
   599                           ;main.c: 233: tmp1 = tmp1 - 45;
   600  0084  087B               	movf	_tmp1,w
   601  0085  3ED3               	addlw	211
   602  0086  00BE               	movwf	??_main
   603  0087  083E               	movf	??_main,w
   604  0088  00FB               	movwf	_tmp1
   605                           
   606                           ;main.c: 234: if(tmp1 == 0)
   607  0089  08FB               	movf	_tmp1,f
   608  008A  1D03               	skipz
   609  008B  2891               	goto	l964
   610                           
   611                           ;main.c: 235: incremental1 = 2;
   612  008C  3002               	movlw	2
   613  008D  00BE               	movwf	??_main
   614  008E  083E               	movf	??_main,w
   615  008F  00F8               	movwf	_incremental1
   616  0090  2899               	goto	l970
   617  0091                     l964:	
   618                           
   619                           ;main.c: 236: else if(tmp1 == 1)
   620  0091  087B               	movf	_tmp1,w
   621  0092  3A01               	xorlw	1
   622  0093  1D03               	skipz
   623  0094  2898               	goto	l968
   624                           
   625                           ;main.c: 237: incremental1 = 1;
   626  0095  01F8               	clrf	_incremental1
   627  0096  0AF8               	incf	_incremental1,f
   628  0097  2899               	goto	l970
   629  0098                     l968:	
   630                           
   631                           ;main.c: 238: else
   632                           ;main.c: 239: incremental1 = 0;
   633  0098  01F8               	clrf	_incremental1
   634  0099                     l970:	
   635                           
   636                           ;main.c: 241: motor1 = tmp1;
   637  0099  087B               	movf	_tmp1,w
   638  009A  00BE               	movwf	??_main
   639  009B  083E               	movf	??_main,w
   640  009C  00F9               	movwf	_motor1
   641  009D  286F               	goto	l950
   642  009E                     __end_of_main:	
   643                           
   644                           	psect	text1
   645  009E                     __ptext1:	
   646 ;; *************** function _global_interrupt *****************
   647 ;; Defined at:
   648 ;;		line 56 in file "main.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;		None
   651 ;; Auto vars:     Size  Location     Type
   652 ;;		None
   653 ;; Return value:  Size  Location     Type
   654 ;;		None               void
   655 ;; Registers used:
   656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMMON   BANK0   BANK1
   662 ;;      Params:         0       0       0
   663 ;;      Locals:         0       0       0
   664 ;;      Temps:          6       0       0
   665 ;;      Totals:         6       0       0
   666 ;;Total ram usage:        6 bytes
   667 ;; Hardware stack levels used:    2
   668 ;; This function calls:
   669 ;;		Nothing
   670 ;; This function is called by:
   671 ;;		Interrupt level 1
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           
   676                           ;psect for function _global_interrupt
   677  009E                     _global_interrupt:	
   678                           
   679                           ;main.c: 58: GIE = 0 ;
   680  009E  138B               	bcf	11,7	;volatile
   681                           
   682                           ;main.c: 61: if(RCIF){
   683  009F  1E8C               	btfss	12,5	;volatile
   684  00A0  28B8               	goto	i1l133
   685                           
   686                           ;main.c: 64: if(FERR == 0 && OERR == 0){
   687  00A1  1D18               	btfss	24,2	;volatile
   688  00A2  1898               	btfsc	24,1	;volatile
   689  00A3  28B2               	goto	i1l770
   690                           
   691                           ;main.c: 65: tmp_data = RCREG;
   692  00A4  081A               	movf	26,w	;volatile
   693  00A5  00F0               	movwf	??_global_interrupt
   694  00A6  0870               	movf	??_global_interrupt,w
   695  00A7  00FA               	movwf	_tmp_data
   696                           
   697                           ;main.c: 68: if(tmp_data == 0x55){
   698  00A8  087A               	movf	_tmp_data,w
   699  00A9  3A55               	xorlw	85
   700  00AA  1903               	btfsc	3,2
   701  00AB  28B6               	goto	L3
   702                           
   703                           ;main.c: 72: }
   704                           ;main.c: 75: motor1_data = tmp_data;
   705                           
   706                           ;main.c: 71: return;
   707                           
   708                           ;main.c: 70: GIE = 1;
   709                           
   710                           ;main.c: 69: counter_uart = 0;
   711  00AC  087A               	movf	_tmp_data,w
   712  00AD  00F0               	movwf	??_global_interrupt
   713  00AE  0870               	movf	??_global_interrupt,w
   714  00AF  00FC               	movwf	_motor1_data
   715                           
   716                           ;main.c: 78: tmp_data = 0;
   717  00B0  01FA               	clrf	_tmp_data
   718                           
   719                           ;main.c: 81: }
   720  00B1  28F3               	goto	i1l804
   721  00B2                     i1l770:	
   722                           
   723                           ;main.c: 82: else{
   724                           ;main.c: 84: tmp_data = RCREG;
   725  00B2  081A               	movf	26,w	;volatile
   726  00B3  00F0               	movwf	??_global_interrupt
   727  00B4  0870               	movf	??_global_interrupt,w
   728  00B5  00FA               	movwf	_tmp_data
   729  00B6                     L3:	
   730                           
   731                           ;main.c: 85: counter_uart = 0;
   732  00B6  01AE               	clrf	_counter_uart
   733  00B7  28F3               	goto	i1l804
   734  00B8                     i1l133:	
   735                           ;main.c: 88: return;
   736                           
   737                           ;main.c: 86: }
   738                           ;main.c: 87: GIE = 1;
   739                           
   740                           
   741                           ;main.c: 90: }
   742                           ;main.c: 93: if(T0IF){
   743  00B8  1D0B               	btfss	11,2	;volatile
   744  00B9  28F4               	goto	i1l136
   745                           
   746                           ;main.c: 94: T0IF = 0;
   747  00BA  110B               	bcf	11,2	;volatile
   748                           
   749                           ;main.c: 97: if(loop1 == 2){
   750  00BB  3002               	movlw	2
   751  00BC  062A               	xorwf	_loop1,w
   752  00BD  042B               	iorwf	_loop1+1,w
   753  00BE  1D03               	skipz
   754  00BF  28C5               	goto	i1l786
   755                           
   756                           ;main.c: 98: loop1 = 1;
   757  00C0  3001               	movlw	1
   758  00C1  00AA               	movwf	_loop1
   759  00C2  3000               	movlw	0
   760  00C3  00AB               	movwf	_loop1+1
   761  00C4  28CC               	goto	L2
   762  00C5                     i1l786:	
   763                           ;main.c: 100: }
   764                           
   765                           ;main.c: 99: TMR0 = 0;
   766                           
   767                           
   768                           ;main.c: 101: else if(loop1 == 1){
   769  00C5  3001               	movlw	1
   770  00C6  062A               	xorwf	_loop1,w
   771  00C7  042B               	iorwf	_loop1+1,w
   772  00C8  1D03               	skipz
   773  00C9  28CE               	goto	i1l790
   774                           
   775                           ;main.c: 102: loop1 = 0;
   776  00CA  01AA               	clrf	_loop1
   777  00CB  01AB               	clrf	_loop1+1
   778  00CC                     L2:	
   779                           
   780                           ;main.c: 103: TMR0 = 0;
   781  00CC  0181               	clrf	1	;volatile
   782                           
   783                           ;main.c: 104: }
   784  00CD  28F3               	goto	i1l804
   785  00CE                     i1l790:	
   786                           
   787                           ;main.c: 105: else{
   788                           ;main.c: 106: TMR0 = motor1Array[motor1];
   789  00CE  0879               	movf	_motor1,w
   790  00CF  3E01               	addlw	low (_motor1Array-__stringbase)
   791  00D0  0084               	movwf	4
   792  00D1  2100               	fcall	stringdir
   793  00D2  0081               	movwf	1	;volatile
   794                           
   795                           ;main.c: 107: loop1 = incremental1;
   796  00D3  0878               	movf	_incremental1,w
   797  00D4  00F0               	movwf	??_global_interrupt
   798  00D5  01F1               	clrf	??_global_interrupt+1
   799  00D6  0870               	movf	??_global_interrupt,w
   800  00D7  00AA               	movwf	_loop1
   801  00D8  0871               	movf	??_global_interrupt+1,w
   802  00D9  00AB               	movwf	_loop1+1
   803                           
   804                           ;main.c: 108: counter1 += direction1;
   805  00DA  0824               	movf	_direction1,w
   806  00DB  07F6               	addwf	_counter1,f
   807  00DC  1803               	skipnc
   808  00DD  0AF7               	incf	_counter1+1,f
   809  00DE  0825               	movf	_direction1+1,w
   810  00DF  07F7               	addwf	_counter1+1,f
   811                           
   812                           ;main.c: 109: if(counter1 == 8)
   813  00E0  3008               	movlw	8
   814  00E1  0676               	xorwf	_counter1,w
   815  00E2  0477               	iorwf	_counter1+1,w
   816  00E3  1D03               	skipz
   817  00E4  28E8               	goto	i1l143
   818                           
   819                           ;main.c: 110: counter1 = 0;
   820  00E5  01F6               	clrf	_counter1
   821  00E6  01F7               	clrf	_counter1+1
   822  00E7  28EE               	goto	i1l802
   823  00E8                     i1l143:	
   824                           
   825                           ;main.c: 111: else if(counter1 < 0)
   826  00E8  1FF7               	btfss	_counter1+1,7
   827  00E9  28EE               	goto	i1l802
   828                           
   829                           ;main.c: 112: counter1 = 8;
   830  00EA  3008               	movlw	8
   831  00EB  00F6               	movwf	_counter1
   832  00EC  3000               	movlw	0
   833  00ED  00F7               	movwf	_counter1+1
   834  00EE                     i1l802:	
   835                           
   836                           ;main.c: 113: PORTA = posArray1[counter1];
   837  00EE  0876               	movf	_counter1,w
   838  00EF  3E2E               	addlw	low (_posArray1-__stringbase)
   839  00F0  0084               	movwf	4
   840  00F1  2100               	fcall	stringdir
   841  00F2  0085               	movwf	5	;volatile
   842  00F3                     i1l804:	
   843                           
   844                           ;main.c: 115: }
   845                           ;main.c: 116: GIE = 1 ;
   846  00F3  178B               	bsf	11,7	;volatile
   847  00F4                     i1l136:	
   848                           ;main.c: 117: return;
   849                           
   850  00F4  0875               	movf	??_global_interrupt+5,w
   851  00F5  00FF               	movwf	127
   852  00F6  0874               	movf	??_global_interrupt+4,w
   853  00F7  008A               	movwf	10
   854  00F8  0873               	movf	??_global_interrupt+3,w
   855  00F9  0084               	movwf	4
   856  00FA  0E72               	swapf	(??_global_interrupt+2)^(0+-128),w
   857  00FB  0083               	movwf	3
   858  00FC  0EFE               	swapf	126,f
   859  00FD  0E7E               	swapf	126,w
   860  00FE  0009               	retfie
   861  00FF                     __end_of_global_interrupt:	
   862  007E                     btemp	set	126	;btemp
   863  007E                     wtemp	set	126
   864  007E                     wtemp0	set	126
   865  0080                     wtemp1	set	128
   866  0082                     wtemp2	set	130
   867  0084                     wtemp3	set	132
   868  0086                     wtemp4	set	134
   869  0088                     wtemp5	set	136
   870  007F                     wtemp6	set	127
   871  007E                     ttemp	set	126
   872  007E                     ttemp0	set	126
   873  0081                     ttemp1	set	129
   874  0084                     ttemp2	set	132
   875  0087                     ttemp3	set	135
   876  007F                     ttemp4	set	127
   877  007E                     ltemp	set	126
   878  007E                     ltemp0	set	126
   879  0082                     ltemp1	set	130
   880  0086                     ltemp2	set	134
   881  0080                     ltemp3	set	128
   882                           
   883                           	psect	intentry
   884  0004                     __pintentry:	
   885                           ;incstack = 0
   886                           ; Regs used in _global_interrupt: [wreg-fsr0h+status,2+status,0+pclath]
   887                           
   888  0004                     interrupt_function:	
   889  007E                     saved_w	set	btemp
   890  0004  00FE               	movwf	btemp
   891  0005  0E03               	swapf	3,w
   892  0006  00F2               	movwf	??_global_interrupt+2
   893  0007  0804               	movf	4,w
   894  0008  00F3               	movwf	??_global_interrupt+3
   895  0009  080A               	movf	10,w
   896  000A  00F4               	movwf	??_global_interrupt+4
   897  000B  1283               	bcf	3,5	;RP0=0, select bank0
   898  000C  1303               	bcf	3,6	;RP1=0, select bank0
   899  000D  087F               	movf	btemp+1,w
   900  000E  00F5               	movwf	??_global_interrupt+5
   901  000F  289E               	ljmp	_global_interrupt


Data Sizes:
    Strings     0
    Constant    69
    Data        9
    BSS         27
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      13
    BANK0            80      1      31
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _global_interrupt in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _global_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _global_interrupt in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _global_interrupt                                     6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _global_interrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
BITBANK1            20      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      1      1F       4       38.8%
BITBANK0            50      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2C       8        0.0%
ABS                  0      0      2C       7        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat May 23 23:38:56 2015

                        pc 0002                __CFG_CP$OFF 0000                         fsr 0004  
                      l950 006F                        l970 0099                        l964 0091  
                      l958 0080                        l968 0098                        _GIE 005F  
             __CFG_CPD$OFF 0000                        fsr0 0004                        indf 0000  
             __CFG_IESO$ON 0000                       _BRGH 04C2                       _T0IE 005D  
                     _T0IF 005A                       _CREN 00C4                       _FERR 00C2  
                     _PEIE 005E                       _RCIE 0465                       _RCIF 0065  
                     _OERR 00C1                       _TMR0 0001                       _SPEN 00C7  
                     _SYNC 04C4              __CFG_FCMEN$ON 0000                       _main 002E  
                     _tmp1 007B                       _tmp2 0033                       _tmp3 0034  
                     btemp 007E              __CFG_BOREN$ON 0000                       ltemp 007E  
                     start 0010                       ttemp 007E                       wtemp 007E  
                    ?_main 0070                      _BRG16 04DB              __CFG_WDTE$OFF 0000  
                    _ANSEL 011E                      i1l133 00B8                      i1l143 00E8  
                    i1l136 00F4                      i1l802 00EE                      i1l804 00F3  
                    i1l770 00B2                      i1l790 00CE                      i1l786 00C5  
                    _RCREG 001A                      _TMR1H 000F                      _SPBRG 0099  
                    _PORTA 0005                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087              __CFG_PWRTE$ON 0000                      _loop1 002A  
                    _loop3 002C                      pclath 000A                      ltemp0 007E  
                    ltemp1 0082                      ltemp2 0086                      ltemp3 0080  
                    ttemp0 007E                      ttemp1 0081                      ttemp2 0084  
                    ttemp3 0087                      ttemp4 007F                      status 0003  
                    wtemp0 007E                      wtemp1 0080                      wtemp2 0082  
                    wtemp3 0084                      wtemp4 0086                      wtemp5 0088  
                    wtemp6 007F             __CFG_MCLRE$OFF 0000            __initialization 0011  
             __end_of_main 009E                     ??_main 003E                     _ANSELH 011F  
                   _OSCCON 008F                     _TMR1GE 0086                     _TMR1CS 0081  
                   _SPBRGH 009A                     _TMR1ON 0080      __end_of_motor2_1Array 0124  
    __end_of_motor2_2Array 0133                     _motor1 0079                     _motor2 0031  
                   _motor3 0032               __pdataCOMMON 007C                     saved_w 007E  
  __end_of__initialization 002C  __size_of_global_interrupt 0061             __pcstackCOMMON 0070  
             __pidataBANK0 014B                 __pbssBANK0 0020              _init_received 0030  
               __pnvCOMMON 007B                 __pmaintext 002E                 __pintentry 0004  
               _direction1 0024                 _direction2 0026                    _T1OSCEN 0083  
               _direction3 0028                    _OSCTUNE 0090                 __stringtab 0100  
                  __ptext1 009E                  _T1CONbits 0010                    clrloop0 0154  
     end_of_initialization 002C          __end_of_posArray1 013B          __end_of_posArray2 0143  
        __end_of_posArray3 014B           _global_interrupt 009E                 _motor1stop 0039  
               _motor2stop 003B                 _motor3stop 003D                 _motor_data 0036  
            __pidataCOMMON 015B        start_initialization 0011               _counter_uart 002E  
             _incremental1 0078               _incremental3 002F                __pdataBANK0 0036  
              __pbssCOMMON 0076                  ___latbits 0000              __pcstackBANK0 003E  
            _motor2_1Array 0115              _motor2_2Array 0124                  __pstrings 0100  
 __end_of_global_interrupt 00FF          interrupt_function 0004                  clear_ram0 0153  
                _posArray1 0133                  _posArray2 013B                  _posArray3 0143  
                _tmp_data2 0035                __stringbase 0105        __end_of_motor1Array 0115  
       __end_of__stringtab 0106                   _counter1 0076                   _counter2 0020  
                 _counter3 0022              __size_of_main 0070                   _tmp_data 007A  
                 intlevel1 0000                _motor1Array 0106                _motor1_data 007C  
              _motor2_data 003A                _motor3_data 003C                  stringcode 0100  
               _OPTION_REG 0081                   stringdir 0100          ?_global_interrupt 0070  
                 stringtab 0100         ??_global_interrupt 0070          __CFG_FOSC$INTRCIO 0000  
