

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun May 24 00:18:26 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F687
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     	;# 
    19  0001                     	;# 
    20  0002                     	;# 
    21  0003                     	;# 
    22  0004                     	;# 
    23  0005                     	;# 
    24  0006                     	;# 
    25  0007                     	;# 
    26  000A                     	;# 
    27  000B                     	;# 
    28  000C                     	;# 
    29  000D                     	;# 
    30  000E                     	;# 
    31  000E                     	;# 
    32  000F                     	;# 
    33  0010                     	;# 
    34  0013                     	;# 
    35  0014                     	;# 
    36  0018                     	;# 
    37  0019                     	;# 
    38  001A                     	;# 
    39  001E                     	;# 
    40  001F                     	;# 
    41  0081                     	;# 
    42  0085                     	;# 
    43  0086                     	;# 
    44  0087                     	;# 
    45  008C                     	;# 
    46  008D                     	;# 
    47  008E                     	;# 
    48  008F                     	;# 
    49  0090                     	;# 
    50  0093                     	;# 
    51  0093                     	;# 
    52  0093                     	;# 
    53  0094                     	;# 
    54  0095                     	;# 
    55  0095                     	;# 
    56  0096                     	;# 
    57  0096                     	;# 
    58  0097                     	;# 
    59  0098                     	;# 
    60  0099                     	;# 
    61  009A                     	;# 
    62  009B                     	;# 
    63  009E                     	;# 
    64  009F                     	;# 
    65  010C                     	;# 
    66  010C                     	;# 
    67  010D                     	;# 
    68  0115                     	;# 
    69  0116                     	;# 
    70  0118                     	;# 
    71  0119                     	;# 
    72  011A                     	;# 
    73  011B                     	;# 
    74  011E                     	;# 
    75  011F                     	;# 
    76  018C                     	;# 
    77  018D                     	;# 
    78  019E                     	;# 
    79                           
    80                           	psect	idataBANK0
    81  01BC                     __pidataBANK0:	
    82                           
    83                           ;initializer for _uart_data
    84  01BC  342D               	retlw	45
    85  01BD  342D               	retlw	45
    86  01BE  342D               	retlw	45
    87  01BF  342D               	retlw	45
    88  01C0  342D               	retlw	45
    89  01C1  342D               	retlw	45
    90  01C2  342D               	retlw	45
    91  01C3  342D               	retlw	45
    92  01C4  342D               	retlw	45
    93  01C5  342D               	retlw	45
    94  01C6  342D               	retlw	45
    95  01C7  342D               	retlw	45
    96  01C8  342D               	retlw	45
    97  01C9  342D               	retlw	45
    98  01CA  342D               	retlw	45
    99                           
   100                           	psect	strings
   101  0171                     __pstrings:	
   102  0171                     stringtab:	
   103  0171                     __stringtab:	
   104  0171                     stringcode:	
   105                           ;	String table - string pointers are 1 byte each
   106                           
   107  0171                     stringdir:	
   108  0171  3001               	movlw	high stringdir
   109  0172  008A               	movwf	10
   110  0173  0804               	movf	4,w
   111  0174  0A84               	incf	4,f
   112  0175  0782               	addwf	2,f
   113  0176                     __stringbase:	
   114  0176  3400               	retlw	0
   115  0177                     __end_of__stringtab:	
   116  0177                     _motor1Array:	
   117  0177  340F               	retlw	15
   118  0178  3487               	retlw	135
   119  0179  3405               	retlw	5
   120  017A  3443               	retlw	67
   121  017B  3469               	retlw	105
   122  017C  3482               	retlw	130
   123  017D  3494               	retlw	148
   124  017E  34A1               	retlw	161
   125  017F  34AC               	retlw	172
   126  0180  34B4               	retlw	180
   127  0181  34BB               	retlw	187
   128  0182  34C0               	retlw	192
   129  0183  34C5               	retlw	197
   130  0184  34C9               	retlw	201
   131  0185  34CD               	retlw	205
   132  0186                     __end_of_motor1Array:	
   133  0186                     _motor2_1Array:	
   134  0186  34A2               	retlw	162
   135  0187  34D1               	retlw	209
   136  0188  34E0               	retlw	224
   137  0189  34E8               	retlw	232
   138  018A  34ED               	retlw	237
   139  018B  34F0               	retlw	240
   140  018C  34F2               	retlw	242
   141  018D  34F4               	retlw	244
   142  018E  34F5               	retlw	245
   143  018F  34F6               	retlw	246
   144  0190  34F7               	retlw	247
   145  0191  34F8               	retlw	248
   146  0192  34F8               	retlw	248
   147  0193  34F9               	retlw	249
   148  0194  34F9               	retlw	249
   149  0195                     __end_of_motor2_1Array:	
   150  0195                     _motor2_2Array:	
   151  0195  343F               	retlw	63
   152  0196  341F               	retlw	31
   153  0197  34BF               	retlw	191
   154  0198  348F               	retlw	143
   155  0199  343F               	retlw	63
   156  019A  345F               	retlw	95
   157  019B  349A               	retlw	154
   158  019C  3447               	retlw	71
   159  019D  3494               	retlw	148
   160  019E  349F               	retlw	159
   161  019F  3479               	retlw	121
   162  01A0  342F               	retlw	47
   163  01A1  34C9               	retlw	201
   164  01A2  344D               	retlw	77
   165  01A3  34BF               	retlw	191
   166  01A4                     __end_of_motor2_2Array:	
   167  01A4                     _posArray1:	
   168  01A4  3411               	retlw	17
   169  01A5  3401               	retlw	1
   170  01A6  3403               	retlw	3
   171  01A7  3402               	retlw	2
   172  01A8  3406               	retlw	6
   173  01A9  3404               	retlw	4
   174  01AA  3414               	retlw	20
   175  01AB  3410               	retlw	16
   176  01AC                     __end_of_posArray1:	
   177  01AC                     _posArray2:	
   178  01AC  3409               	retlw	9
   179  01AD  3401               	retlw	1
   180  01AE  3403               	retlw	3
   181  01AF  3402               	retlw	2
   182  01B0  3406               	retlw	6
   183  01B1  3404               	retlw	4
   184  01B2  340C               	retlw	12
   185  01B3  3408               	retlw	8
   186  01B4                     __end_of_posArray2:	
   187  01B4                     _posArray3:	
   188  01B4  3490               	retlw	144
   189  01B5  3410               	retlw	16
   190  01B6  3430               	retlw	48
   191  01B7  3420               	retlw	32
   192  01B8  3460               	retlw	96
   193  01B9  3440               	retlw	64
   194  01BA  34C0               	retlw	192
   195  01BB  3480               	retlw	128
   196  01BC                     __end_of_posArray3:	
   197                           
   198                           	psect	nvCOMMON
   199  007C                     __pnvCOMMON:	
   200  007C                     _tmp1:	
   201  007C                     	ds	1
   202  0005                     _PORTA	set	5
   203  0006                     _PORTB	set	6
   204  0007                     _PORTC	set	7
   205  001A                     _RCREG	set	26
   206  0010                     _T1CONbits	set	16
   207  0001                     _TMR0	set	1
   208  000F                     _TMR1H	set	15
   209  000E                     _TMR1L	set	14
   210  00C4                     _CREN	set	196
   211  00C2                     _FERR	set	194
   212  005F                     _GIE	set	95
   213  00C1                     _OERR	set	193
   214  005E                     _PEIE	set	94
   215  0065                     _RCIF	set	101
   216  00C7                     _SPEN	set	199
   217  005D                     _T0IE	set	93
   218  005A                     _T0IF	set	90
   219  0060                     _T1IF	set	96
   220  0083                     _T1OSCEN	set	131
   221  0081                     _TMR1CS	set	129
   222  0086                     _TMR1GE	set	134
   223  0080                     _TMR1ON	set	128
   224  0081                     _OPTION_REG	set	129
   225  008F                     _OSCCON	set	143
   226  0090                     _OSCTUNE	set	144
   227  0099                     _SPBRG	set	153
   228  009A                     _SPBRGH	set	154
   229  0085                     _TRISA	set	133
   230  0086                     _TRISB	set	134
   231  0087                     _TRISC	set	135
   232  04DB                     _BRG16	set	1243
   233  04C2                     _BRGH	set	1218
   234  0465                     _RCIE	set	1125
   235  04C4                     _SYNC	set	1220
   236  0460                     _TMR1IE	set	1120
   237  011E                     _ANSEL	set	286
   238  011F                     _ANSELH	set	287
   239                           
   240                           ; #config settings
   241  0000                     
   242                           	psect	cinit
   243  0011                     start_initialization:	
   244  0011                     __initialization:	
   245                           
   246                           ; Clear objects allocated to COMMON
   247  0011  3070               	movlw	low __pbssCOMMON
   248  0012  0084               	movwf	4
   249  0013  3076               	movlw	low (__pbssCOMMON+6)
   250  0014  21CB               	fcall	clear_ram0
   251                           
   252                           ; Clear objects allocated to BANK0
   253  0015  1383               	bcf	3,7	;select IRP bank0
   254  0016  3020               	movlw	low __pbssBANK0
   255  0017  0084               	movwf	4
   256  0018  3038               	movlw	low (__pbssBANK0+24)
   257  0019  21CB               	fcall	clear_ram0
   258                           
   259                           ; Initialize objects allocated to BANK0
   260  001A  21BC               	fcall	__pidataBANK0	;fetch initializer
   261  001B  00B8               	movwf	__pdataBANK0& (0+127)
   262  001C  21BD               	fcall	__pidataBANK0+1	;fetch initializer
   263  001D  00B9               	movwf	(__pdataBANK0+1)& (0+127)
   264  001E  21BE               	fcall	__pidataBANK0+2	;fetch initializer
   265  001F  00BA               	movwf	(__pdataBANK0+2)& (0+127)
   266  0020  21BF               	fcall	__pidataBANK0+3	;fetch initializer
   267  0021  00BB               	movwf	(__pdataBANK0+3)& (0+127)
   268  0022  21C0               	fcall	__pidataBANK0+4	;fetch initializer
   269  0023  00BC               	movwf	(__pdataBANK0+4)& (0+127)
   270  0024  21C1               	fcall	__pidataBANK0+5	;fetch initializer
   271  0025  00BD               	movwf	(__pdataBANK0+5)& (0+127)
   272  0026  21C2               	fcall	__pidataBANK0+6	;fetch initializer
   273  0027  00BE               	movwf	(__pdataBANK0+6)& (0+127)
   274  0028  21C3               	fcall	__pidataBANK0+7	;fetch initializer
   275  0029  00BF               	movwf	(__pdataBANK0+7)& (0+127)
   276  002A  21C4               	fcall	__pidataBANK0+8	;fetch initializer
   277  002B  00C0               	movwf	(__pdataBANK0+8)& (0+127)
   278  002C  21C5               	fcall	__pidataBANK0+9	;fetch initializer
   279  002D  00C1               	movwf	(__pdataBANK0+9)& (0+127)
   280  002E  21C6               	fcall	__pidataBANK0+10	;fetch initializer
   281  002F  00C2               	movwf	(__pdataBANK0+10)& (0+127)
   282  0030  21C7               	fcall	__pidataBANK0+11	;fetch initializer
   283  0031  00C3               	movwf	(__pdataBANK0+11)& (0+127)
   284  0032  21C8               	fcall	__pidataBANK0+12	;fetch initializer
   285  0033  00C4               	movwf	(__pdataBANK0+12)& (0+127)
   286  0034  21C9               	fcall	__pidataBANK0+13	;fetch initializer
   287  0035  00C5               	movwf	(__pdataBANK0+13)& (0+127)
   288  0036  21CA               	fcall	__pidataBANK0+14	;fetch initializer
   289  0037  00C6               	movwf	(__pdataBANK0+14)& (0+127)
   290  0038                     end_of_initialization:	
   291                           ;End of C runtime variable initialization code
   292                           
   293  0038                     __end_of__initialization:	
   294  0038  0183               	clrf	3
   295  0039  28D6               	ljmp	_main	;jump to C main() function
   296                           
   297                           	psect	bssCOMMON
   298  0070                     __pbssCOMMON:	
   299  0070                     _counter_uart:	
   300  0070                     	ds	1
   301  0071                     _motor1:	
   302  0071                     	ds	1
   303  0072                     _motor1run:	
   304  0072                     	ds	1
   305  0073                     _motor2:	
   306  0073                     	ds	1
   307  0074                     _tmp2:	
   308  0074                     	ds	1
   309  0075                     _tmp_data:	
   310  0075                     	ds	1
   311                           
   312                           	psect	bssBANK0
   313  0020                     __pbssBANK0:	
   314  0020                     _counter1:	
   315  0020                     	ds	2
   316  0022                     _counter2:	
   317  0022                     	ds	2
   318  0024                     _counter3:	
   319  0024                     	ds	2
   320  0026                     _direction1:	
   321  0026                     	ds	2
   322  0028                     _direction2:	
   323  0028                     	ds	2
   324  002A                     _direction3:	
   325  002A                     	ds	2
   326  002C                     _loop1:	
   327  002C                     	ds	2
   328  002E                     _loop3:	
   329  002E                     	ds	2
   330  0030                     _incremental1:	
   331  0030                     	ds	1
   332  0031                     _incremental3:	
   333  0031                     	ds	1
   334  0032                     _init_received:	
   335  0032                     	ds	1
   336  0033                     _motor2run:	
   337  0033                     	ds	1
   338  0034                     _motor3:	
   339  0034                     	ds	1
   340  0035                     _motor3run:	
   341  0035                     	ds	1
   342  0036                     _tmp3:	
   343  0036                     	ds	1
   344  0037                     _tmp_data2:	
   345  0037                     	ds	1
   346                           
   347                           	psect	dataBANK0
   348  0038                     __pdataBANK0:	
   349  0038                     _uart_data:	
   350  0038                     	ds	15
   351                           
   352                           	psect	clrtext
   353  01CB                     clear_ram0:	
   354                           ;	Called with FSR containing the base address, and
   355                           ;	W with the last address+1
   356                           
   357  01CB  0064               	clrwdt	;clear the watchdog before getting into this loop
   358  01CC                     clrloop0:	
   359  01CC  0180               	clrf	0	;clear RAM location pointed to by FSR
   360  01CD  0A84               	incf	4,f	;increment pointer
   361  01CE  0604               	xorwf	4,w	;XOR with final address
   362  01CF  1903               	btfsc	3,2	;have we reached the end yet?
   363  01D0  3400               	retlw	0	;all done for this memory range, return
   364  01D1  0604               	xorwf	4,w	;XOR again to restore value
   365  01D2  29CC               	goto	clrloop0	;do the next byte
   366                           
   367                           	psect	cstackCOMMON
   368  0076                     __pcstackCOMMON:	
   369  0076                     ?_global_interrupt:	
   370  0076                     ??_global_interrupt:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  0076                     ?_main:	
   374                           ; 0 bytes @ 0x0
   375                           
   376                           
   377                           ; 2 bytes @ 0x0
   378  0076                     	ds	6
   379                           
   380                           	psect	cstackBANK0
   381  0047                     __pcstackBANK0:	
   382  0047                     ??_main:	
   383                           
   384                           ; 0 bytes @ 0x0
   385  0047                     	ds	1
   386                           
   387                           	psect	maintext
   388  00D6                     __pmaintext:	
   389 ;;
   390 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   391 ;;
   392 ;; *************** function _main *****************
   393 ;; Defined at:
   394 ;;		line 147 in file "main.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  2  156[COMMON] int 
   401 ;; Registers used:
   402 ;;		wreg, status,2, status,0
   403 ;; Tracked objects:
   404 ;;		On entry : 17F/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMMON   BANK0   BANK1
   408 ;;      Params:         0       0       0
   409 ;;      Locals:         0       0       0
   410 ;;      Temps:          0       1       0
   411 ;;      Totals:         0       1       0
   412 ;;Total ram usage:        1 bytes
   413 ;; Hardware stack levels required when called:    2
   414 ;; This function calls:
   415 ;;		Nothing
   416 ;; This function is called by:
   417 ;;		Startup code after reset
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           
   422                           ;psect for function _main
   423  00D6                     _main:	
   424                           
   425                           ;main.c: 149: OSCCON = 0x00;
   426                           
   427                           ;incstack = 0
   428                           ; Regs used in _main: [wreg+status,2+status,0]
   429  00D6  1683               	bsf	3,5	;RP0=1, select bank1
   430  00D7  1303               	bcf	3,6	;RP1=0, select bank1
   431  00D8  018F               	clrf	15	;volatile
   432                           
   433                           ;main.c: 150: OSCCON |= 0b01110001;
   434  00D9  3071               	movlw	113
   435  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   436  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   437  00DC  00C7               	movwf	??_main
   438  00DD  0847               	movf	??_main,w
   439  00DE  1683               	bsf	3,5	;RP0=1, select bank1
   440  00DF  1303               	bcf	3,6	;RP1=0, select bank1
   441  00E0  048F               	iorwf	15,f	;volatile
   442                           
   443                           ;main.c: 151: OSCTUNE = 0x00;
   444  00E1  0190               	clrf	16	;volatile
   445                           
   446                           ;main.c: 155: OPTION_REG &= 0b11010000;
   447  00E2  30D0               	movlw	208
   448  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   449  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   450  00E5  00C7               	movwf	??_main
   451  00E6  0847               	movf	??_main,w
   452  00E7  1683               	bsf	3,5	;RP0=1, select bank1
   453  00E8  1303               	bcf	3,6	;RP1=0, select bank1
   454  00E9  0581               	andwf	1,f	;volatile
   455                           
   456                           ;main.c: 156: OPTION_REG |= 0b00000100;
   457  00EA  1501               	bsf	1,2	;volatile
   458                           
   459                           ;main.c: 157: TMR0 = 0x00;
   460  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   461  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   462  00ED  0181               	clrf	1	;volatile
   463                           
   464                           ;main.c: 158: T0IE = 1;
   465  00EE  168B               	bsf	11,5	;volatile
   466                           
   467                           ;main.c: 163: TMR1GE = 0;
   468  00EF  1310               	bcf	16,6	;volatile
   469                           
   470                           ;main.c: 164: T1CONbits.T1CKPS0 = 0;
   471  00F0  1210               	bcf	16,4	;volatile
   472                           
   473                           ;main.c: 165: T1CONbits.T1CKPS1 = 0;
   474  00F1  1290               	bcf	16,5	;volatile
   475                           
   476                           ;main.c: 166: T1OSCEN = 0;
   477  00F2  1190               	bcf	16,3	;volatile
   478                           
   479                           ;main.c: 167: TMR1CS = 0;
   480  00F3  1090               	bcf	16,1	;volatile
   481                           
   482                           ;main.c: 168: TMR1ON = 1;
   483  00F4  1410               	bsf	16,0	;volatile
   484                           
   485                           ;main.c: 169: TMR1H = 0x00;
   486  00F5  018F               	clrf	15	;volatile
   487                           
   488                           ;main.c: 170: TMR1H = 0x00;
   489  00F6  018F               	clrf	15	;volatile
   490                           
   491                           ;main.c: 171: TMR1IE = 1;
   492  00F7  1683               	bsf	3,5	;RP0=1, select bank1
   493  00F8  1303               	bcf	3,6	;RP1=0, select bank1
   494  00F9  140C               	bsf	12,0	;volatile
   495                           
   496                           ;main.c: 175: BRG16 = 0;
   497  00FA  119B               	bcf	27,3	;volatile
   498                           
   499                           ;main.c: 176: BRGH = 0;
   500  00FB  1118               	bcf	24,2	;volatile
   501                           
   502                           ;main.c: 177: SPBRGH = 0;
   503  00FC  019A               	clrf	26	;volatile
   504                           
   505                           ;main.c: 178: SPBRG = 0x0C;
   506  00FD  300C               	movlw	12
   507  00FE  0099               	movwf	25	;volatile
   508                           
   509                           ;main.c: 179: SYNC = 0;
   510  00FF  1218               	bcf	24,4	;volatile
   511                           
   512                           ;main.c: 180: SPEN = 1;
   513  0100  1283               	bcf	3,5	;RP0=0, select bank0
   514  0101  1303               	bcf	3,6	;RP1=0, select bank0
   515  0102  1798               	bsf	24,7	;volatile
   516                           
   517                           ;main.c: 181: RCIE = 1;
   518  0103  1683               	bsf	3,5	;RP0=1, select bank1
   519  0104  1303               	bcf	3,6	;RP1=0, select bank1
   520  0105  168C               	bsf	12,5	;volatile
   521                           
   522                           ;main.c: 182: CREN = 1;
   523  0106  1283               	bcf	3,5	;RP0=0, select bank0
   524  0107  1303               	bcf	3,6	;RP1=0, select bank0
   525  0108  1618               	bsf	24,4	;volatile
   526                           
   527                           ;main.c: 200: TRISA = 0x00;
   528  0109  1683               	bsf	3,5	;RP0=1, select bank1
   529  010A  1303               	bcf	3,6	;RP1=0, select bank1
   530  010B  0185               	clrf	5	;volatile
   531                           
   532                           ;main.c: 201: TRISB = 0b00100000;
   533  010C  3020               	movlw	32
   534  010D  0086               	movwf	6	;volatile
   535                           
   536                           ;main.c: 202: TRISC = 0x00;
   537  010E  0187               	clrf	7	;volatile
   538                           
   539                           ;main.c: 203: ANSEL = 0x00;
   540  010F  1283               	bcf	3,5	;RP0=0, select bank2
   541  0110  1703               	bsf	3,6	;RP1=1, select bank2
   542  0111  019E               	clrf	30	;volatile
   543                           
   544                           ;main.c: 204: ANSELH = 0x00;
   545  0112  019F               	clrf	31	;volatile
   546                           
   547                           ;main.c: 207: PORTA = 0x00;
   548  0113  1283               	bcf	3,5	;RP0=0, select bank0
   549  0114  1303               	bcf	3,6	;RP1=0, select bank0
   550  0115  0185               	clrf	5	;volatile
   551                           
   552                           ;main.c: 208: PORTB = 0x00;
   553  0116  0186               	clrf	6	;volatile
   554                           
   555                           ;main.c: 209: PORTC = 0x00;
   556  0117  0187               	clrf	7	;volatile
   557                           
   558                           ;main.c: 210: PEIE = 1;
   559  0118  170B               	bsf	11,6	;volatile
   560                           
   561                           ;main.c: 211: GIE = 1;
   562  0119  178B               	bsf	11,7	;volatile
   563  011A                     l1061:	
   564                           ;main.c: 213: while(1){
   565                           
   566                           
   567                           ;main.c: 216: tmp1 = uart_data[14];
   568  011A  0846               	movf	_uart_data+14,w
   569  011B  00C7               	movwf	??_main
   570  011C  0847               	movf	??_main,w
   571  011D  00FC               	movwf	_tmp1
   572                           
   573                           ;main.c: 218: if(tmp1 == 75)
   574  011E  087C               	movf	_tmp1,w
   575  011F  3A4B               	xorlw	75
   576  0120  1D03               	skipz
   577  0121  2924               	goto	l1067
   578                           
   579                           ;main.c: 219: motor1run = 0x00;
   580  0122  01F2               	clrf	_motor1run
   581  0123  2928               	goto	l159
   582  0124                     l1067:	
   583                           
   584                           ;main.c: 220: else
   585                           ;main.c: 221: motor1run = 0xFF;
   586  0124  30FF               	movlw	255
   587  0125  00C7               	movwf	??_main
   588  0126  0847               	movf	??_main,w
   589  0127  00F2               	movwf	_motor1run
   590  0128                     l159:	
   591                           
   592                           ;main.c: 223: if(tmp1 >=60){
   593  0128  303C               	movlw	60
   594  0129  027C               	subwf	_tmp1,w
   595  012A  1C03               	skipc
   596  012B  2935               	goto	l1073
   597                           
   598                           ;main.c: 224: tmp1 = tmp1 - 15;
   599  012C  087C               	movf	_tmp1,w
   600  012D  3EF1               	addlw	241
   601  012E  00C7               	movwf	??_main
   602  012F  0847               	movf	??_main,w
   603  0130  00FC               	movwf	_tmp1
   604                           
   605                           ;main.c: 225: direction1 = -1;
   606  0131  30FF               	movlw	255
   607  0132  00A6               	movwf	_direction1
   608  0133  30FF               	movlw	255
   609  0134  2938               	goto	L1
   610  0135                     l1073:	
   611                           ;main.c: 226: }
   612                           
   613                           
   614                           ;main.c: 227: else
   615                           ;main.c: 228: direction1 = 1;
   616  0135  3001               	movlw	1
   617  0136  00A6               	movwf	_direction1
   618  0137  3000               	movlw	0
   619  0138                     L1:	
   620  0138  00A7               	movwf	_direction1+1
   621                           
   622                           ;main.c: 233: tmp1 = tmp1 - 45;
   623  0139  087C               	movf	_tmp1,w
   624  013A  3ED3               	addlw	211
   625  013B  00C7               	movwf	??_main
   626  013C  0847               	movf	??_main,w
   627  013D  00FC               	movwf	_tmp1
   628                           
   629                           ;main.c: 234: if(tmp1 == 0)
   630  013E  08FC               	movf	_tmp1,f
   631  013F  1D03               	skipz
   632  0140  2946               	goto	l1079
   633                           
   634                           ;main.c: 235: incremental1 = 2;
   635  0141  3002               	movlw	2
   636  0142  00C7               	movwf	??_main
   637  0143  0847               	movf	??_main,w
   638  0144  00B0               	movwf	_incremental1
   639  0145  294E               	goto	l1085
   640  0146                     l1079:	
   641                           
   642                           ;main.c: 236: else if(tmp1 == 1)
   643  0146  087C               	movf	_tmp1,w
   644  0147  3A01               	xorlw	1
   645  0148  1D03               	skipz
   646  0149  294D               	goto	l1083
   647                           
   648                           ;main.c: 237: incremental1 = 1;
   649  014A  01B0               	clrf	_incremental1
   650  014B  0AB0               	incf	_incremental1,f
   651  014C  294E               	goto	l1085
   652  014D                     l1083:	
   653                           
   654                           ;main.c: 238: else
   655                           ;main.c: 239: incremental1 = 0;
   656  014D  01B0               	clrf	_incremental1
   657  014E                     l1085:	
   658                           
   659                           ;main.c: 242: motor1 = tmp1;
   660  014E  087C               	movf	_tmp1,w
   661  014F  00C7               	movwf	??_main
   662  0150  0847               	movf	??_main,w
   663  0151  00F1               	movwf	_motor1
   664                           
   665                           ;main.c: 246: tmp2 = uart_data[13];
   666  0152  0845               	movf	_uart_data+13,w
   667  0153  00C7               	movwf	??_main
   668  0154  0847               	movf	??_main,w
   669  0155  00F4               	movwf	_tmp2
   670                           
   671                           ;main.c: 247: if(tmp2 >=60){
   672  0156  303C               	movlw	60
   673  0157  0274               	subwf	_tmp2,w
   674  0158  1C03               	skipc
   675  0159  2963               	goto	l1095
   676                           
   677                           ;main.c: 248: tmp2 = tmp2 - 15;
   678  015A  0874               	movf	_tmp2,w
   679  015B  3EF1               	addlw	241
   680  015C  00C7               	movwf	??_main
   681  015D  0847               	movf	??_main,w
   682  015E  00F4               	movwf	_tmp2
   683                           
   684                           ;main.c: 249: direction2 = -1;
   685  015F  30FF               	movlw	255
   686  0160  00A8               	movwf	_direction2
   687  0161  30FF               	movlw	255
   688  0162  2966               	goto	L2
   689  0163                     l1095:	
   690                           ;main.c: 250: }
   691                           
   692                           
   693                           ;main.c: 251: else
   694                           ;main.c: 252: direction2 = 1;
   695  0163  3001               	movlw	1
   696  0164  00A8               	movwf	_direction2
   697  0165  3000               	movlw	0
   698  0166                     L2:	
   699  0166  00A9               	movwf	_direction2+1
   700                           
   701                           ;main.c: 254: tmp2 = tmp2 - 45;
   702  0167  0874               	movf	_tmp2,w
   703  0168  3ED3               	addlw	211
   704  0169  00C7               	movwf	??_main
   705  016A  0847               	movf	??_main,w
   706  016B  00F4               	movwf	_tmp2
   707                           
   708                           ;main.c: 255: motor2 = tmp2;
   709  016C  0874               	movf	_tmp2,w
   710  016D  00C7               	movwf	??_main
   711  016E  0847               	movf	??_main,w
   712  016F  00F3               	movwf	_motor2
   713  0170  291A               	goto	l1061
   714  0171                     __end_of_main:	
   715                           
   716                           	psect	text1
   717  003A                     __ptext1:	
   718 ;; *************** function _global_interrupt *****************
   719 ;; Defined at:
   720 ;;		line 50 in file "main.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;		None
   723 ;; Auto vars:     Size  Location     Type
   724 ;;		None
   725 ;; Return value:  Size  Location     Type
   726 ;;		None               void
   727 ;; Registers used:
   728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1
   734 ;;      Params:         0       0       0
   735 ;;      Locals:         0       0       0
   736 ;;      Temps:          6       0       0
   737 ;;      Totals:         6       0       0
   738 ;;Total ram usage:        6 bytes
   739 ;; Hardware stack levels used:    2
   740 ;; This function calls:
   741 ;;		Nothing
   742 ;; This function is called by:
   743 ;;		Interrupt level 1
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           
   748                           ;psect for function _global_interrupt
   749  003A                     _global_interrupt:	
   750                           
   751                           ;main.c: 52: GIE = 0 ;
   752  003A  138B               	bcf	11,7	;volatile
   753                           
   754                           ;main.c: 53: CREN = 1;
   755  003B  1618               	bsf	24,4	;volatile
   756                           
   757                           ;main.c: 55: if(RCIF){
   758  003C  1E8C               	btfss	12,5	;volatile
   759  003D  2861               	goto	i1l137
   760                           
   761                           ;main.c: 58: if(FERR == 0 && OERR == 0){
   762  003E  1D18               	btfss	24,2	;volatile
   763  003F  1898               	btfsc	24,1	;volatile
   764  0040  285A               	goto	i1l138
   765                           
   766                           ;main.c: 59: tmp_data = RCREG;
   767  0041  081A               	movf	26,w	;volatile
   768  0042  00F6               	movwf	??_global_interrupt
   769  0043  0876               	movf	??_global_interrupt,w
   770  0044  00F5               	movwf	_tmp_data
   771                           
   772                           ;main.c: 61: if(tmp_data == 0x55){
   773  0045  0875               	movf	_tmp_data,w
   774  0046  3A55               	xorlw	85
   775  0047  1903               	btfsc	3,2
   776  0048  285F               	goto	i1l835
   777                           
   778                           ;main.c: 65: }
   779                           ;main.c: 67: uart_data[counter_uart] = tmp_data;
   780                           
   781                           ;main.c: 64: return;
   782                           
   783                           ;main.c: 63: GIE = 1;
   784                           
   785                           ;main.c: 62: counter_uart = 0;
   786  0049  0875               	movf	_tmp_data,w
   787  004A  00F6               	movwf	??_global_interrupt
   788  004B  0870               	movf	_counter_uart,w
   789  004C  3E38               	addlw	_uart_data& (0+255)
   790  004D  0084               	movwf	4
   791  004E  0876               	movf	??_global_interrupt,w
   792  004F  1383               	bcf	3,7	;select IRP bank0
   793  0050  0080               	movwf	0
   794                           
   795                           ;main.c: 68: counter_uart += 1;
   796  0051  3001               	movlw	1
   797  0052  00F6               	movwf	??_global_interrupt
   798  0053  0876               	movf	??_global_interrupt,w
   799  0054  07F0               	addwf	_counter_uart,f
   800                           
   801                           ;main.c: 69: if(counter_uart == 15){
   802  0055  0870               	movf	_counter_uart,w
   803  0056  3A0F               	xorlw	15
   804  0057  1D03               	skipz
   805  0058  28CA               	goto	i1l885
   806  0059  285F               	goto	i1l835
   807  005A                     i1l138:	
   808                           ;main.c: 71: }
   809                           ;main.c: 75: }
   810                           
   811                           ;main.c: 70: counter_uart = 0;
   812                           
   813                           
   814                           ;main.c: 76: else{
   815                           ;main.c: 77: CREN = 0;
   816  005A  1218               	bcf	24,4	;volatile
   817                           
   818                           ;main.c: 78: tmp_data = RCREG;
   819  005B  081A               	movf	26,w	;volatile
   820  005C  00F6               	movwf	??_global_interrupt
   821  005D  0876               	movf	??_global_interrupt,w
   822  005E  00F5               	movwf	_tmp_data
   823  005F                     i1l835:	
   824                           
   825                           ;main.c: 79: counter_uart = 0;
   826  005F  01F0               	clrf	_counter_uart
   827  0060  28CA               	goto	i1l885
   828  0061                     i1l137:	
   829                           ;main.c: 82: return;
   830                           
   831                           ;main.c: 80: }
   832                           ;main.c: 81: GIE = 1;
   833                           
   834                           
   835                           ;main.c: 84: }
   836                           ;main.c: 87: if(T0IF){
   837  0061  1D0B               	btfss	11,2	;volatile
   838  0062  289E               	goto	i1l143
   839                           
   840                           ;main.c: 88: T0IF = 0;
   841  0063  110B               	bcf	11,2	;volatile
   842                           
   843                           ;main.c: 91: if(loop1 == 2){
   844  0064  3002               	movlw	2
   845  0065  062C               	xorwf	_loop1,w
   846  0066  042D               	iorwf	_loop1+1,w
   847  0067  1D03               	skipz
   848  0068  286E               	goto	i1l849
   849                           
   850                           ;main.c: 92: loop1 = 1;
   851  0069  3001               	movlw	1
   852  006A  00AC               	movwf	_loop1
   853  006B  3000               	movlw	0
   854  006C  00AD               	movwf	_loop1+1
   855  006D  2875               	goto	L3
   856  006E                     i1l849:	
   857                           ;main.c: 94: }
   858                           
   859                           ;main.c: 93: TMR0 = 0;
   860                           
   861                           
   862                           ;main.c: 95: else if(loop1 == 1){
   863  006E  3001               	movlw	1
   864  006F  062C               	xorwf	_loop1,w
   865  0070  042D               	iorwf	_loop1+1,w
   866  0071  1D03               	skipz
   867  0072  2877               	goto	i1l853
   868                           
   869                           ;main.c: 96: loop1 = 0;
   870  0073  01AC               	clrf	_loop1
   871  0074  01AD               	clrf	_loop1+1
   872  0075                     L3:	
   873                           
   874                           ;main.c: 97: TMR0 = 0;
   875  0075  0181               	clrf	1	;volatile
   876                           
   877                           ;main.c: 98: }
   878  0076  28CA               	goto	i1l885
   879  0077                     i1l853:	
   880                           
   881                           ;main.c: 99: else{
   882                           ;main.c: 100: TMR0 = motor1Array[motor1];
   883  0077  0871               	movf	_motor1,w
   884  0078  3E01               	addlw	low (_motor1Array-__stringbase)
   885  0079  0084               	movwf	4
   886  007A  2171               	fcall	stringdir
   887  007B  0081               	movwf	1	;volatile
   888                           
   889                           ;main.c: 101: loop1 = incremental1;
   890  007C  0830               	movf	_incremental1,w
   891  007D  00F6               	movwf	??_global_interrupt
   892  007E  01F7               	clrf	??_global_interrupt+1
   893  007F  0876               	movf	??_global_interrupt,w
   894  0080  00AC               	movwf	_loop1
   895  0081  0877               	movf	??_global_interrupt+1,w
   896  0082  00AD               	movwf	_loop1+1
   897                           
   898                           ;main.c: 102: counter1 += direction1;
   899  0083  0826               	movf	_direction1,w
   900  0084  07A0               	addwf	_counter1,f
   901  0085  1803               	skipnc
   902  0086  0AA1               	incf	_counter1+1,f
   903  0087  0827               	movf	_direction1+1,w
   904  0088  07A1               	addwf	_counter1+1,f
   905                           
   906                           ;main.c: 103: if(counter1 == 8)
   907  0089  3008               	movlw	8
   908  008A  0620               	xorwf	_counter1,w
   909  008B  0421               	iorwf	_counter1+1,w
   910  008C  1D03               	skipz
   911  008D  2891               	goto	i1l148
   912                           
   913                           ;main.c: 104: counter1 = 0;
   914  008E  01A0               	clrf	_counter1
   915  008F  01A1               	clrf	_counter1+1
   916  0090  2897               	goto	i1l865
   917  0091                     i1l148:	
   918                           
   919                           ;main.c: 105: else if(counter1 < 0)
   920  0091  1FA1               	btfss	_counter1+1,7
   921  0092  2897               	goto	i1l865
   922                           
   923                           ;main.c: 106: counter1 = 8;
   924  0093  3008               	movlw	8
   925  0094  00A0               	movwf	_counter1
   926  0095  3000               	movlw	0
   927  0096  00A1               	movwf	_counter1+1
   928  0097                     i1l865:	
   929                           
   930                           ;main.c: 108: PORTA = posArray1[counter1] & motor1run;
   931  0097  0820               	movf	_counter1,w
   932  0098  3E2E               	addlw	low (_posArray1-__stringbase)
   933  0099  0084               	movwf	4
   934  009A  2171               	fcall	stringdir
   935  009B  0572               	andwf	_motor1run,w
   936  009C  0085               	movwf	5	;volatile
   937  009D  28CA               	goto	i1l885
   938  009E                     i1l143:	
   939                           ;main.c: 113: return;
   940                           
   941                           ;main.c: 111: }
   942                           ;main.c: 112: GIE = 1 ;
   943                           
   944                           
   945                           ;main.c: 115: }
   946                           ;main.c: 118: if(T1IF){
   947  009E  1C0C               	btfss	12,0	;volatile
   948  009F  28BF               	goto	i1l883
   949                           
   950                           ;main.c: 119: T1IF = 0;
   951  00A0  100C               	bcf	12,0	;volatile
   952                           
   953                           ;main.c: 121: counter2 += direction2;
   954  00A1  0828               	movf	_direction2,w
   955  00A2  07A2               	addwf	_counter2,f
   956  00A3  1803               	skipnc
   957  00A4  0AA3               	incf	_counter2+1,f
   958  00A5  0829               	movf	_direction2+1,w
   959  00A6  07A3               	addwf	_counter2+1,f
   960                           
   961                           ;main.c: 123: if(counter2 == 8)
   962  00A7  3008               	movlw	8
   963  00A8  0622               	xorwf	_counter2,w
   964  00A9  0423               	iorwf	_counter2+1,w
   965  00AA  1D03               	skipz
   966  00AB  28AF               	goto	i1l152
   967                           
   968                           ;main.c: 124: counter2 = 0;
   969  00AC  01A2               	clrf	_counter2
   970  00AD  01A3               	clrf	_counter2+1
   971  00AE  28B5               	goto	i1l879
   972  00AF                     i1l152:	
   973                           
   974                           ;main.c: 125: else if(counter2 < 0)
   975  00AF  1FA3               	btfss	_counter2+1,7
   976  00B0  28B5               	goto	i1l879
   977                           
   978                           ;main.c: 126: counter2 = 8;
   979  00B1  3008               	movlw	8
   980  00B2  00A2               	movwf	_counter2
   981  00B3  3000               	movlw	0
   982  00B4  00A3               	movwf	_counter2+1
   983  00B5                     i1l879:	
   984                           
   985                           ;main.c: 128: TMR1H = motor2_1Array[motor2];
   986  00B5  0873               	movf	_motor2,w
   987  00B6  3E10               	addlw	low (_motor2_1Array-__stringbase)
   988  00B7  0084               	movwf	4
   989  00B8  2171               	fcall	stringdir
   990  00B9  008F               	movwf	15	;volatile
   991                           
   992                           ;main.c: 129: TMR1L = motor2_2Array[motor2];
   993  00BA  0873               	movf	_motor2,w
   994  00BB  3E1F               	addlw	low (_motor2_2Array-__stringbase)
   995  00BC  0084               	movwf	4
   996  00BD  2171               	fcall	stringdir
   997  00BE  008E               	movwf	14	;volatile
   998  00BF                     i1l883:	
   999                           
  1000                           ;main.c: 132: }
  1001                           ;main.c: 134: PORTC = posArray2[counter2] | posArray3[counter3];
  1002  00BF  0824               	movf	_counter3,w
  1003  00C0  3E3E               	addlw	low (_posArray3-__stringbase)
  1004  00C1  0084               	movwf	4
  1005  00C2  2171               	fcall	stringdir
  1006  00C3  00F6               	movwf	??_global_interrupt
  1007  00C4  0822               	movf	_counter2,w
  1008  00C5  3E36               	addlw	low (_posArray2-__stringbase)
  1009  00C6  0084               	movwf	4
  1010  00C7  2171               	fcall	stringdir
  1011  00C8  0476               	iorwf	??_global_interrupt,w
  1012  00C9  0087               	movwf	7	;volatile
  1013  00CA                     i1l885:	
  1014                           
  1015                           ;main.c: 137: GIE = 1 ;
  1016  00CA  178B               	bsf	11,7	;volatile
  1017                           
  1018                           ;main.c: 138: return;
  1019  00CB  087B               	movf	??_global_interrupt+5,w
  1020  00CC  00FF               	movwf	127
  1021  00CD  087A               	movf	??_global_interrupt+4,w
  1022  00CE  008A               	movwf	10
  1023  00CF  0879               	movf	??_global_interrupt+3,w
  1024  00D0  0084               	movwf	4
  1025  00D1  0E78               	swapf	(??_global_interrupt+2)^(0+-128),w
  1026  00D2  0083               	movwf	3
  1027  00D3  0EFE               	swapf	126,f
  1028  00D4  0E7E               	swapf	126,w
  1029  00D5  0009               	retfie
  1030  00D6                     __end_of_global_interrupt:	
  1031  007E                     btemp	set	126	;btemp
  1032  007E                     wtemp	set	126
  1033  007E                     wtemp0	set	126
  1034  0080                     wtemp1	set	128
  1035  0082                     wtemp2	set	130
  1036  0084                     wtemp3	set	132
  1037  0086                     wtemp4	set	134
  1038  0088                     wtemp5	set	136
  1039  007F                     wtemp6	set	127
  1040  007E                     ttemp	set	126
  1041  007E                     ttemp0	set	126
  1042  0081                     ttemp1	set	129
  1043  0084                     ttemp2	set	132
  1044  0087                     ttemp3	set	135
  1045  007F                     ttemp4	set	127
  1046  007E                     ltemp	set	126
  1047  007E                     ltemp0	set	126
  1048  0082                     ltemp1	set	130
  1049  0086                     ltemp2	set	134
  1050  0080                     ltemp3	set	128
  1051                           
  1052                           	psect	intentry
  1053  0004                     __pintentry:	
  1054                           ;incstack = 0
  1055                           ; Regs used in _global_interrupt: [wreg-fsr0h+status,2+status,0+pclath]
  1056                           
  1057  0004                     interrupt_function:	
  1058  007E                     saved_w	set	btemp
  1059  0004  00FE               	movwf	btemp
  1060  0005  0E03               	swapf	3,w
  1061  0006  00F8               	movwf	??_global_interrupt+2
  1062  0007  0804               	movf	4,w
  1063  0008  00F9               	movwf	??_global_interrupt+3
  1064  0009  080A               	movf	10,w
  1065  000A  00FA               	movwf	??_global_interrupt+4
  1066  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1067  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1068  000D  087F               	movf	btemp+1,w
  1069  000E  00FB               	movwf	??_global_interrupt+5
  1070  000F  283A               	ljmp	_global_interrupt


Data Sizes:
    Strings     0
    Constant    69
    Data        15
    BSS         30
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      13
    BANK0            80      1      40
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _global_interrupt in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _global_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _global_interrupt in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _global_interrupt                                     6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _global_interrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
BITBANK1            20      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      1      28       4       50.0%
BITBANK0            50      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      35       8        0.0%
ABS                  0      0      35       7        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun May 24 00:18:26 2015

                        pc 0002                __CFG_CP$OFF 0000                         fsr 0004  
                      l159 0128                        _GIE 005F               __CFG_CPD$OFF 0000  
                      fsr0 0004                        indf 0000               __CFG_IESO$ON 0000  
                     l1061 011A                       l1073 0135                       l1083 014D  
                     l1067 0124                       l1085 014E                       l1095 0163  
                     l1079 0146                       _BRGH 04C2                       _T0IE 005D  
                     _T0IF 005A                       _CREN 00C4                       _FERR 00C2  
                     _T1IF 0060                       _PEIE 005E                       _RCIE 0465  
                     _RCIF 0065                       _OERR 00C1                       _TMR0 0001  
                     _SPEN 00C7                       _SYNC 04C4              __CFG_FCMEN$ON 0000  
                     _main 00D6                       _tmp1 007C                       _tmp2 0074  
                     _tmp3 0036                       btemp 007E              __CFG_BOREN$ON 0000  
                     ltemp 007E                       start 0010                       ttemp 007E  
                     wtemp 007E                      ?_main 0076                      _BRG16 04DB  
            __CFG_WDTE$OFF 0000                      _ANSEL 011E                      i1l143 009E  
                    i1l152 00AF                      i1l137 0061                      i1l138 005A  
                    i1l148 0091                      i1l835 005F                      i1l853 0077  
                    i1l865 0097                      i1l849 006E                      i1l883 00BF  
                    i1l885 00CA                      i1l879 00B5                      _RCREG 001A  
                    _TMR1H 000F                      _TMR1L 000E                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
            __CFG_PWRTE$ON 0000                      _loop1 002C                      _loop3 002E  
                    pclath 000A                      ltemp0 007E                      ltemp1 0082  
                    ltemp2 0086                      ltemp3 0080                      ttemp0 007E  
                    ttemp1 0081                      ttemp2 0084                      ttemp3 0087  
                    ttemp4 007F                      status 0003                      wtemp0 007E  
                    wtemp1 0080                      wtemp2 0082                      wtemp3 0084  
                    wtemp4 0086                      wtemp5 0088                      wtemp6 007F  
           __CFG_MCLRE$OFF 0000            __initialization 0011               __end_of_main 0171  
                   ??_main 0047                     _ANSELH 011F                     _OSCCON 008F  
                   _TMR1GE 0086                     _TMR1IE 0460                     _TMR1CS 0081  
                   _SPBRGH 009A                     _TMR1ON 0080      __end_of_motor2_1Array 0195  
    __end_of_motor2_2Array 01A4                     _motor1 0071                     _motor2 0073  
                   _motor3 0034                     saved_w 007E    __end_of__initialization 0038  
__size_of_global_interrupt 009C             __pcstackCOMMON 0076               __pidataBANK0 01BC  
               __pbssBANK0 0020              _init_received 0032                 __pnvCOMMON 007C  
               __pmaintext 00D6                 __pintentry 0004                 _direction1 0026  
               _direction2 0028                    _T1OSCEN 0083                 _direction3 002A  
                  _OSCTUNE 0090                 __stringtab 0171                    __ptext1 003A  
                _T1CONbits 0010                    clrloop0 01CC       end_of_initialization 0038  
        __end_of_posArray1 01AC          __end_of_posArray2 01B4          __end_of_posArray3 01BC  
         _global_interrupt 003A        start_initialization 0011               _counter_uart 0070  
             _incremental1 0030               _incremental3 0031                __pdataBANK0 0038  
              __pbssCOMMON 0070                  ___latbits 0000              __pcstackBANK0 0047  
            _motor2_1Array 0186              _motor2_2Array 0195                  __pstrings 0171  
 __end_of_global_interrupt 00D6          interrupt_function 0004                  clear_ram0 01CB  
                _posArray1 01A4                  _posArray2 01AC                  _posArray3 01B4  
                _motor1run 0072                  _motor2run 0033                  _motor3run 0035  
                _uart_data 0038                  _tmp_data2 0037                __stringbase 0176  
      __end_of_motor1Array 0186         __end_of__stringtab 0177                   _counter1 0020  
                 _counter2 0022                   _counter3 0024              __size_of_main 009B  
                 _tmp_data 0075                   intlevel1 0000                _motor1Array 0177  
                stringcode 0171                 _OPTION_REG 0081                   stringdir 0171  
        ?_global_interrupt 0076                   stringtab 0171         ??_global_interrupt 0076  
        __CFG_FOSC$INTRCIO 0000  
